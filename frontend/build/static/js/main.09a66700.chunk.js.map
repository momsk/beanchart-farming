{"version":3,"sources":["assets/img/logo-rev.png","assets/img/logo.png","assets/img/metamask-fox.svg","assets/img/logo-cake.svg","assets/img/logo-icon.png","components/Button/Button.tsx","components/CardIcon/CardIcon.tsx","components/Modal/Modal.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ModalContent/ModalContent.tsx","components/ModalTitle/ModalTitle.tsx","components/DisclaimerModal/DisclaimerModal.tsx","components/MobileMenu/MobileMenu.tsx","components/Container/Container.tsx","components/Logo/Logo.tsx","contexts/Modals/Modals.tsx","hooks/useModal.ts","components/Card/Card.tsx","components/CardContent/CardContent.tsx","components/CardTitle/CardTitle.tsx","components/WalletProviderModal/components/WalletCard.tsx","components/WalletProviderModal/WalletProviderModal.tsx","farm/lib/types.js","farm/lib/constants.js","farm/lib/contracts.js","farm/lib/evm.js","farm/Farm.js","farm/index.js","contexts/YamProvider/YamProvider.tsx","hooks/useYam.ts","farm/utils.js","utils/erc20.ts","hooks/useBlock.ts","hooks/useTokenBalance.ts","utils/formatBalance.ts","components/Label/Label.tsx","components/Value/Value.tsx","utils/getEthChainInfo.ts","components/TopBar/components/AccountModal.tsx","components/TopBar/components/AccountButton.tsx","components/TopBar/components/Nav.tsx","components/TopBar/TopBar.tsx","contexts/Farms/context.ts","contexts/Farms/Farms.tsx","contexts/Transactions/context.ts","contexts/Transactions/reducer.ts","contexts/Transactions/TransactionsProvider.tsx","components/Footer/components/Nav.tsx","components/Footer/Footer.tsx","components/Page/Page.tsx","components/PageHeader/PageHeader.tsx","hooks/useFarm.ts","hooks/useRedeem.ts","hooks/useEarnings.ts","hooks/useReward.ts","views/Farm/components/Harvest.tsx","hooks/useAllowance.ts","hooks/useApprove.ts","hooks/useStake.ts","hooks/useStakedBalance.ts","hooks/useUnstake.ts","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","views/Farm/components/DepositModal.tsx","views/Farm/components/WithdrawModal.tsx","views/Farm/components/Stake.tsx","views/Farm/Farm.tsx","components/Loader/Loader.tsx","hooks/useFarms.ts","utils/index.ts","hooks/useAllStakedValue.ts","views/Farms/components/FarmCards.tsx","constants/config.ts","views/Farms/Farms.tsx","theme/index.ts","theme/colors.ts","App.tsx","index.tsx"],"names":["module","exports","StyledButton","styled","button","props","backgroundColor","disabled","menuButton","theme","color","whiteOpacity","white","minHeight","grey","border","variant","fontSize","size","padding","undefined","StyledLink","Link","spacing","StyledExternalLink","a","Button","buttonColor","boxShadow","buttonSize","buttonPadding","children","href","onClick","text","to","useContext","ThemeContext","purple","primary","main","ButtonChild","useMemo","target","StyledCardIcon","div","CardIcon","mobileKeyframes","keyframes","StyledResponsiveWrapper","breakpoints","mobile","StyledModal","Modal","StyledSpacer","Spacer","s","StyledModalActions","StyledModalAction","ModalActions","l","React","Children","toArray","length","map","child","i","StyledModalContent","ModalContent","StyledModalTitle","ModalTitle","DisclaimerModal","onConfirm","onDismiss","useState","step","setStep","handleConfirm","useCallback","modalContent","StyledBackdrop","StyledMobileMenuWrapper","slideIn","StyledMobileMenu","NavLink","MobileMenu","visible","exact","activeClassName","StyledContainer","width","Container","siteWidth","StyledLogo","Logo","src","logo","height","style","marginTop","Context","createContext","onPresent","StyledModalWrapper","StyledModalBackdrop","Modals","isOpen","setIsOpen","content","setContent","modalKey","setModalKey","handlePresent","key","handleDismiss","Provider","value","isValidElement","cloneElement","useModal","modal","StyledCard","flat","Card","StyledCardContent","CardContent","StyledCardTitle","black","CardTitle","WalletCard","icon","onConnect","title","StyledWalletsWrapper","WalletProviderModal","useWallet","account","connect","useEffect","metamaskLogo","ConfirmationType","contractAddresses","erc20","97","56","42","4","1","erc20v2","farm","weth","supportedPools","id","version","name","pid","lpAddresses","tokenAddresses","symbol","tokenSymbol","pool","Contracts","provider","networkId","web3","options","this","defaultConfirmations","autoGasMultiplier","confirmationType","Types","defaultGas","defaultGasPrice","eth","Contract","ERC20Abi","ERC20V2Abi","FarmAbi","WETHAbi","pools","Object","assign","lpAddress","tokenAddress","lpContract","UNIV2PairAbi","tokenContract","setProvider","setDefaultAccount","defaultAccount","contract","address","console","error","forEach","from","REQUIRE_MSG","EVM","resetSnapshotId","snapshot","reset","Error","callJsonrpcMethod","duration","method","params","args","jsonrpc","Date","getTime","send","response","result","Promise","resolve","reject","val","expected_error_msg","message","matchedIndex","search","matchedString","substring","expect","toEqual","promise","reason","assertCertainError","process","COVERAGE","Farm","testing","realProvider","includes","Web3","providers","WebsocketProvider","ethereumNodeTimeout","HttpProvider","contracts","erc20Address","erc20v2Address","farmAddress","wethAddress","operation","setNetworkId","BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","yam","YamProvider","ethereum","setYam","window","chainId","Number","yamLib","Yam","selectedAddress","accounts","yamsauce","useYam","getFarmContract","getFarms","lpToken","lpTokenAddress","earnToken","earnTokenAddress","getPoolWeight","farmContract","methods","poolInfo","call","allocPoint","totalAllocPoint","getEarned","pending","getTotalLPWethValue","wethContract","balanceOf","tokenAmountWholeLP","decimals","tokenDecimals","balance","totalSupply","lpContractWeth","portionLp","lpWethWorth","totalLpWethValue","times","tokenAmount","pow","wethAmount","totalWethValue","tokenPriceInWeth","poolWeight","approve","ethers","constants","MaxUint256","stake","amount","deposit","toString","on","tx","log","transactionHash","unstake","withdraw","harvest","getStaked","userInfo","redeem","exit","alert","getContract","ERC20ABI","abi","getAllowance","allowance","getBalance","userAddress","useBlock","block","setBlock","interval","setInterval","getBlockNumber","latestBlockNumber","clearInterval","useTokenBalance","setBalance","fetchBalance","getBalanceNumber","displayBalance","dividedBy","toNumber","getDisplayBalance","toPrecision","getFullDisplayBalance","toFixed","StyledLabel","Label","StyledValue","Value","start","updateStart","end","updateEnd","separator","getEthChainInfo","rpcUrl","ethscanType","location","test","StyledBalance","StyledBalanceWrapper","AccountModal","handleSignOutClick","erc20address","erc20Balance","display","imageLTO","StyledAccountButton","AccountButton","onPresentAccountModal","onPresentWalletProviderModal","handleUnlockClick","StyledNav","nav","Nav","showMenu","StyledLogoWrapper","StyledTopBar","StyledTopBarInner","topBarSize","StyledAccountButtonWrapper","TopBar","onPresentMobileMenu","showButton","context","farms","unharvested","Farms","transactions","onAddTransaction","setTransactions","type","initialState","initialized","reducer","state","action","transaction","hash","txHash","receipt","TransactionsProvider","useReducer","dispatch","handleAddTransaction","fetchTransactions","txsRaw","localStorage","getItem","txs","JSON","parse","e","setItem","stringify","contractAddressesTemp","StyledFooter","footer","StyledFooterInner","Footer","StyledPage","StyledMain","Page","StyledPageHeader","StyledIcon","StyledTitle","h1","StyledSubtitle","h3","PageHeader","subtitle","useFarm","FarmsContext","find","useRedeem","onRedeem","useEarnings","useReward","onReward","StyledCardHeader","StyledCardActions","StyledCardContentInner","Harvest","earnings","pendingTx","setPendingTx","useAllowance","setAllowance","fetchAllowance","refreshInterval","useApprove","onApprove","useStake","onStake","useStakedBalance","useUnstake","onUnstake","StyledInputWrapper","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","onSelectMax","toLocaleString","DepositModal","tokenName","setVal","fullBalance","handleChange","currentTarget","handleSelectMax","WithdrawModal","StyledActionSpacer","Stake","requestedApproval","setRequestedApproval","tokenBalance","stakedBalance","onPresentDeposit","onPresentWithdraw","handleApprove","imageUniswap","eq","StyledFarm","StyledCardsWrapper","StyledCardWrapper","farmId","useParams","scrollTo","lpTokenName","toUpperCase","alignItems","flex","justifyContent","spin","StyledLoader","StyledYam","StyledText","Loader","useFarms","bnToDec","bn","useAllStakedValue","balances","wethContact","fetchAllStakedValue","all","FarmCard","setHarvestable","earned","fetchEarned","isNaN","StyledCardAccent","StyledContent","filter","StyledDetails","StyledDetail","RainbowLight","StyledCards","StyledLoadingWrapper","StyledRow","h4","FarmCards","stakedValue","farmIndex","findIndex","farmPrice","BLOCKS_PER_YEAR","FARM_PER_BLOCK","rows","reduce","farmRows","farmWithStakedValue","apy","newFarmRows","push","farmRow","j","Fragment","StyledFarms","path","useRouteMatch","borderRadius","100","200","300","400","500","600","800","light","secondary","2","3","5","6","7","Providers","connectors","walletconnect","Disclaimer","markSeen","App","mobileMenu","setMobileMenu","handleDismissMobileMenu","handlePresentMobileMenu","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qzdAAAA,EAAOC,QAAU,IAA0B,sC,+qLCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,8+mBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,+qBC6HrCC,EAAeC,IAAOC,OAAV,4dAEF,SAAAC,GAAK,OAAIA,EAAMC,mBACrBD,EAAME,UAAYF,EAAMG,WAAaH,EAAMI,MAAMC,MAAMC,aACvDN,EAAME,SAAyBF,EAAMI,MAAMC,MAAME,MAAhCP,EAAMK,UAEjB,SAAAL,GAAK,OAAIA,EAAMQ,aACnB,SAAAR,GAAK,OAAKA,EAAME,UAAN,oBAA+BF,EAAMI,MAAMC,MAAMI,KAAK,OAAWT,EAAMU,OAAxE,oBAA8FV,EAAMI,MAAMC,MAAMI,KAAK,MAAS,OAGxI,SAAAT,GAAK,OAAKA,EAAME,UAAN,UAAqBF,EAAMI,MAAMC,MAAMI,KAAK,OACvC,cAAlBT,EAAMW,SAA2BX,EAAMI,MAAMC,MAAMI,KAAK,OACtC,aAAlBT,EAAMW,SAA0BX,EAAMC,iBAAmBD,EAAMG,aAAhE,UAAkFH,EAAMI,MAAMC,MAAME,UAI5F,SAAAP,GAAK,OAAIA,EAAMY,YAElB,SAAAZ,GAAK,OAAIA,EAAMa,QAGT,SAAAb,GAAK,OAAIA,EAAMc,WACd,SAAAd,GAAK,OAAIA,EAAMc,WACd,SAAAd,GAAK,OAAKA,EAAME,SAAuB,YAAZa,KAGvB,SAAAf,GAAK,OAAIA,EAAMC,gBAAN,UAA2BD,EAAMC,gBAAjC,MACN,cAAlBD,EAAMW,QAA0BX,EAAMI,MAAMC,MAAMI,KAAK,KAAQT,EAAMK,OAAN,UAAkBL,EAAMK,MAAxB,OAAqCL,EAAMI,MAAMC,MAAMI,KAAK,QAEvH,SAAAT,GAAK,OAAIA,EAAMK,QAAWL,EAAMG,YAAcH,EAAMC,iBAAqC,aAAlBD,EAAMW,QAA0BX,EAAMI,MAAMC,MAAME,MAAQP,EAAMI,MAAMC,MAAMI,KAAK,SAI/JO,EAAalB,YAAOmB,IAAPnB,CAAH,qNAOF,SAAAE,GAAK,OAAKA,EAAMI,MAAMc,QAAQ,MAC7B,SAAAlB,GAAK,OAAIA,EAAMI,MAAMc,QAAQ,MAItCC,EAAqBrB,IAAOsB,EAAV,qNAOV,SAAApB,GAAK,OAAKA,EAAMI,MAAMc,QAAQ,MAC7B,SAAAlB,GAAK,OAAIA,EAAMI,MAAMc,QAAQ,MAI7BG,EAnKuB,SAAC,GAYhC,IAGDC,EAcAC,EACAC,EACAC,EACAb,EA/BJc,EAWI,EAXJA,SACAxB,EAUI,EAVJA,SAUI,IATJC,kBASI,SARJwB,EAQI,EARJA,KACAC,EAOI,EAPJA,QACAf,EAMI,EANJA,KACAgB,EAKI,EALJA,KACAC,EAII,EAJJA,GACAnB,EAGI,EAHJA,QACAV,EAEI,EAFJA,gBAEI,IADJS,cACI,SACJ,EAA2BqB,qBAAWC,KAA9B3B,EAAR,EAAQA,MAAOa,EAAf,EAAeA,QAIf,OAAQP,GACN,IAAK,WACDW,EAAcjB,EAAM4B,OAAO,KAC7B,MACF,IAAK,YACHX,EAAcjB,EAAME,MACpB,MACF,IAAK,UACL,QACEe,EAAcjB,EAAM6B,QAAQC,KAOhC,IAAI3B,EAAoB,GACxB,OAAQK,GACN,IAAK,KACHL,EAAY,GACd,IAAK,KACHe,EAAS,sBAAkBlB,EAAMI,KAAK,KAA7B,qCACUJ,EAAMI,KAAK,KADrB,OAETgB,EAAgBP,EAAQ,GACxBM,EAAa,GACbZ,EAAW,GACX,MACF,IAAK,KACHW,EAAS,uBAAmBlB,EAAMI,KAAK,KAA9B,uCACYJ,EAAMI,KAAK,KADvB,OAETgB,EAAgBP,EAAQ,GACxBM,EAAa,GACbZ,EAAW,GACX,MACF,IAAK,KACL,QACEW,EAAS,uBAAmBlB,EAAMI,KAAK,KAA9B,4CACiBJ,EAAMI,KAAK,KAD5B,OAGTgB,EAAgBP,EAAQ,GACxBM,EAAa,GACbZ,EAAW,GAGf,IAAMwB,EAAcC,mBAAQ,WAC1B,OAAIP,EACK,kBAACd,EAAD,CAAYc,GAAIA,GAAKD,GACnBF,EACF,kBAACR,EAAD,CAAoBQ,KAAMA,EAAMW,OAAO,WAAWT,GAElDA,IAER,CAACF,EAAME,EAAMC,IAEhB,OACE,kBAACjC,EAAD,CACE0B,UAAWA,EACXlB,MAAOiB,EACPnB,WAAYA,EACZD,SAAUA,EACVU,SAAUA,EACVgB,QAASA,EACTd,QAASW,EACTZ,KAAMW,EACNvB,gBAAiBA,EACjBS,OAAQA,EACRC,QAASA,EACTH,UAAWA,GAEVkB,EACAU,IC7FDG,EAAiBzC,IAAO0C,IAAV,iOACE,SAAAxC,GAAK,OAAIA,EAAMI,MAAMC,MAAME,SAQ9B,SAAAP,GAAK,OAAIA,EAAMI,MAAMc,QAAQ,MAGjCuB,EAlB2B,SAAC,GAAD,IAAGf,EAAH,EAAGA,SAAH,OACxC,kBAACa,EAAD,KACGb,ICMCgB,EAAkBC,YAAH,2HASfC,EAA0B9C,IAAO0C,IAAV,oYAQN,SAACxC,GAAD,OAAWA,EAAMI,MAAMyC,YAAYC,UAM5B,SAAC9C,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,KAC5CwB,GAIXK,EAAcjD,IAAO0C,IAAV,oQAED,SAACxC,GAAD,OAAWA,EAAMI,MAAMC,MAAME,SACvB,SAACP,GAAD,OAAWA,EAAMI,MAAMC,MAAMI,KAAK,QAEtB,SAACT,GAAD,OAAWA,EAAMI,MAAMC,MAAMI,KAAK,QAUrDuC,GAFYlD,IAAO0C,IAAV,0BAjDA,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SACzB,OACE,kBAACkB,EAAD,KACE,kBAACG,EAAD,KAAcrB,MCsBduB,EAAenD,IAAO0C,IAAV,+DACN,SAAAxC,GAAK,OAAIA,EAAMa,QAChB,SAAAb,GAAK,OAAIA,EAAMa,QAGXqC,EA9BuB,SAAC,GAAqB,IAGtDC,EAHqD,IAAlBtC,YAAkB,MAAX,KAAW,EACjDK,EAAYa,qBAAWC,KAAvBd,QAGR,OAAQL,GACN,IAAK,KACHsC,EAAIjC,EAAQ,GACZ,MACF,IAAK,KACHiC,EAAIjC,EAAQ,GACZ,MACF,IAAK,KACL,QACEiC,EAAIjC,EAAQ,GAGhB,OACE,kBAAC+B,EAAD,CAAcpC,KAAMsC,KCHlBC,EAAqBtD,IAAO0C,IAAV,gKAGF,SAAAxC,GAAK,OAAIA,EAAMI,MAAMC,MAAMI,KAAK,QAGzC,SAAAT,GAAK,OAAIA,EAAMI,MAAMc,QAAQ,MAGpCmC,EAAoBvD,IAAO0C,IAAV,4BAGRc,GA5BgB,SAAC,GAAkB,IAAhB5B,EAAe,EAAfA,SAC1B6B,EAAIC,IAAMC,SAASC,QAAQhC,GAAUiC,OAC3C,OACE,kBAACP,EAAD,KACGI,IAAMC,SAASG,IAAIlC,GAAU,SAACmC,EAAOC,GAAR,OAC5B,oCACE,kBAACT,EAAD,KACGQ,GAEFC,EAAIP,EAAI,GAAK,kBAAC,EAAD,YCLlBQ,GAAqBjE,IAAO0C,IAAV,sHACX,SAAAxC,GAAK,OAAIA,EAAMI,MAAMc,QAAQ,MACnB,SAAAlB,GAAK,OAAIA,EAAMI,MAAMyC,YAAYC,UAMzCkB,GAdgB,SAAC,GAAkB,IAAhBtC,EAAe,EAAfA,SAChC,OACE,kBAAC,GAAD,KAAqBA,ICQnBuC,GAAmBnE,IAAO0C,IAAV,2KAEX,SAAAxC,GAAK,OAAIA,EAAMI,MAAMC,MAAMI,KAAK,QAQ5ByD,GAhB+B,SAAC,GAAD,IAAGrC,EAAH,EAAGA,KAAH,OAC5C,kBAACoC,GAAD,KACGpC,IC6DUsC,GAzDoC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAE/D,EAAwBC,mBAAS,cAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAgBC,uBAAY,WAChCN,IACAC,MACC,CAACD,EAAWC,IAETM,EAAetC,mBAAQ,WAC3B,MAAa,eAATkC,EAEA,6BACE,4CACA,8VACA,8GAKF,6BACE,wDACA,iHACA,uFACA,qEAIL,CAACA,IAEExE,EAASsC,mBAAQ,WACrB,MAAa,eAATkC,EAEA,kBAAC,EAAD,CAAQ1C,KAAK,OAAOlB,QAAQ,YAAYiB,QAAS,kBAAM4C,EAAQ,cAI/D,kBAAC,EAAD,CAAQ3C,KAAK,eAAeD,QAAS6C,MAGxC,CAACD,EAASD,EAAME,IAEnB,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAY5C,KAAI,YAChB,kBAAC,EAAD,qBACA,kBAAC,GAAD,KACG8C,GAEH,kBAAC,GAAD,KACG5E,KCrCH6E,GAAiB9E,IAAO0C,IAAV,wHACE,SAAAxC,GAAK,OAAIA,EAAMI,MAAMC,MAAMI,KAAK,QAKhDoE,GAA0B/E,IAAO0C,IAAV,wJAQvBsC,GAAUnC,YAAH,yHASPoC,GAAmBjF,IAAO0C,IAAV,0QACPsC,IACO,SAAA9E,GAAK,OAAIA,EAAMI,MAAMC,MAAMI,KAAK,QAUhDO,GAAalB,YAAOkF,IAAPlF,CAAH,gRAEL,SAAAE,GAAK,OAAIA,EAAMI,MAAMC,MAAMI,KAAK,QAG9B,SAAAT,GAAK,OAAIA,EAAMI,MAAMc,QAAQ,MAAQ,SAAAlB,GAAK,OAAIA,EAAMI,MAAMc,QAAQ,MAKlE,SAAAlB,GAAK,OAAIA,EAAMI,MAAMC,MAAMI,KAAK,QAGhC,SAAAT,GAAK,OAAIA,EAAMI,MAAMC,MAAM6B,QAAQC,QAIjC8C,GApE+B,SAAC,GAA4B,IAA1BZ,EAAyB,EAAzBA,UAC/C,OADwE,EAAda,QAGtD,kBAACL,GAAD,KACE,kBAACD,GAAD,CAAgBhD,QAASyC,IACzB,kBAACU,GAAD,KACE,kBAAC,GAAD,CAAYI,OAAK,EAACC,gBAAgB,SAAStD,GAAG,IAAIF,QAASyC,GAA3D,QACA,kBAAC,GAAD,CAAYc,OAAK,EAACC,gBAAgB,SAAStD,GAAG,SAASF,QAASyC,GAAhE,SACA,kBAAC,GAAD,CAAYc,OAAK,EAACC,gBAAgB,SAAStD,GAAG,OAAOF,QAASyC,GAA9D,SAKD,MCUHgB,GAAkBvF,IAAO0C,IAAV,oIAGN,SAAAxC,GAAK,OAAIA,EAAMsF,SACf,SAAAtF,GAAK,OAAIA,EAAMI,MAAMc,QAAQ,MAI7BqE,GAjC6B,SAAC,GAA+B,IAEtED,EAFyC5D,EAA4B,EAA5BA,SAA4B,IAAlBb,YAAkB,MAAX,KAAW,EACjE2E,EAAczD,qBAAkCC,KAAhDwD,UAER,OAAQ3E,GACN,IAAK,KACHyE,EAAQE,EAAY,EACpB,MACF,IAAK,KACHF,EAAoB,EAAZE,EAAgB,EACxB,MACF,IAAK,KACL,QACEF,EAAQE,EAEZ,OACE,kBAACH,GAAD,CAAiBC,MAAOA,GACrB5D,I,qBCVD+D,GAAa3F,YAAOmB,IAAPnB,CAAH,qbAyBD4F,GAjCQ,WACrB,OACE,kBAACD,GAAD,CAAY3D,GAAG,KACb,yBAAK6D,IAAKC,KAAMC,OAAO,MAAMC,MAAO,CAAEC,WAAY,OCC3CC,GAAUC,wBAA6B,CAClDC,UAAW,aACX7B,UAAW,eAuCP8B,GAAqBrG,IAAO0C,IAAV,0LASlB4D,GAAsBtG,IAAO0C,IAAV,4HAMV6D,GAnDU,SAAC,GAAkB,IAAhB3E,EAAe,EAAfA,SAC1B,EAA4B4C,oBAAS,GAArC,mBAAOgC,EAAP,KAAeC,EAAf,KACA,EAA8BjC,qBAA9B,mBAAOkC,EAAP,KAAgBC,EAAhB,KACA,EAAgCnC,qBAAhC,mBAAOoC,EAAP,KAAiBC,EAAjB,KAEMC,EAAgBlC,uBAAY,SAACC,EAA+BkC,GAChEF,EAAYE,GACZJ,EAAW9B,GACX4B,GAAU,KACT,CAACE,EAAYF,EAAWI,IAErBG,EAAgBpC,uBAAY,WAChC+B,OAAW1F,GACXwF,GAAU,KACT,CAACE,EAAYF,EAAWG,IAE3B,OACE,kBAACV,GAAQe,SAAT,CAAkBC,MAAO,CACvBR,UACAF,SACAJ,UAAWU,EACXvC,UAAWyC,IAEVpF,EACA4E,GACC,kBAACH,GAAD,KACE,kBAACC,GAAD,CAAqBxE,QAASkF,IAC7BtD,IAAMyD,eAAeT,IAAYhD,IAAM0D,aAAaV,EAAS,CAC5DnC,UAAWyC,OCzBRK,GAdE,SAACC,EAAwBP,GACxC,MAAiC9E,qBAAWiE,IAApC3B,EAAR,EAAQA,UAAW6B,EAAnB,EAAmBA,UAUnB,MAAO,CARexB,uBAAY,WAChCwB,EAAUkB,EAAOP,KAChB,CACDA,EACAO,EACAlB,IAGqB7B,I,qBCOnBgD,GAAavH,IAAO0C,IAAV,iKACA,SAAAxC,GAAK,OAAIA,EAAMI,MAAMC,MAAME,SACrB,SAAAP,GAAK,OAAIA,EAAMsH,KAAO,OAAStH,EAAMI,MAAMC,MAAMI,KAAK,KAAO,QAE/E,SAAAT,GAAK,OAAIA,EAAMsH,KAAO,GAAK,0GAMhBC,GAxBmB,SAAC,GAAD,IAChC7F,EADgC,EAChCA,SACA4F,EAFgC,EAEhCA,KAFgC,OAKhC,kBAACD,GAAD,CAAYC,KAAMA,GACf5F,ICPC8F,GAAoB1H,IAAO0C,IAAV,uGAIV,SAACxC,GAAD,gBAAcA,EAAMI,MAAMc,QAAQ,GAAlC,cAA0ClB,EAAMI,MAAMc,QAAQ,GAA9D,SAGEuG,GAXe,SAAC,GAAD,IAAG/F,EAAH,EAAGA,SAAH,OAC5B,kBAAC8F,GAAD,KAAoB9F,ICOhBgG,GAAkB5H,IAAO0C,IAAV,8HACV,SAAAxC,GAAK,OAAIA,EAAMI,MAAMC,MAAMsH,SAGzB,SAAA3H,GAAK,OAAIA,EAAMI,MAAMc,QAAQ,MAI3B0G,GAZ6B,SAAC,GAAD,IAAG/F,EAAH,EAAGA,KAAH,OAC1C,kBAAC6F,GAAD,KAAkB7F,IC0BLgG,GAlB+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,MAApB,OAC5C,kBAAC,GAAD,CAAMV,MAAI,GACR,kBAAC,GAAD,KACE,kBAAC,EAAD,KACGQ,GAEH,kBAAC,GAAD,CAAWjG,KAAMmG,IACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,CACIrH,QAAS,YACTD,QAAM,EACNkB,QAASmG,EACTlG,KAAK,eCgBToG,GAAuBnI,IAAO0C,IAAV,yJAGH,SAACxC,GAAD,OAAWA,EAAMI,MAAMyC,YAAYC,UAU3CoF,IAJUpI,IAAO0C,IAAV,8DACK,SAACxC,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAxCR,SAAC,GAAmB,IAAjBmD,EAAgB,EAAhBA,UACnD,EAA6B8D,cAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAQjB,OANAC,qBAAU,WACJF,GACF/D,MAED,CAAC+D,EAAS/D,IAGX,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAYxC,KAAK,8BAEjB,kBAAC,GAAD,KACE,kBAACoG,GAAD,KACI,kBAAC,GAAD,CACEH,KAAM,yBAAKnC,IAAK4C,KAAczC,MAAO,CAAED,OAAQ,MAC/CkC,UAAW,kBAAMM,EAAQ,aACzBL,MAAM,eAKd,kBAAC,GAAD,KACE,kBAAC,EAAD,CAAQnG,KAAK,SAASlB,QAAQ,YAAYiB,QAASyC,Q,kECtC9CmE,GAEA,E,SCkBAC,GAAoB,CAC/BC,MAAO,CACLC,GAAI,6CACJC,GAAI,6CACJC,GAAI,6CACJC,EAAG,6CACHC,EAAG,8CAELC,QAAS,CACPL,GAAI,6CACJC,GAAI,6CACJC,GAAI,6CACJC,EAAG,6CACHC,EAAG,8CAELE,KAAM,CACJN,GAAI,6CACJC,GAAI,6CACJC,GAAI,6CACJC,EAAG,6CACHC,EAAG,8CAELG,KAAM,CACJP,GAAI,6CACJC,GAAI,6CACJC,GAAI,6CACJC,EAAG,6CACHC,EAAG,+CAIMI,GAAiB,CAC5B,CACEC,GAAI,MACJC,QAAS,KACTC,KAAM,aACNC,IAAK,EACLC,YAAa,CACXb,GAAI,6CACJC,GAAI,6CACJC,GAAI,6CACJC,EAAG,6CACHC,EAAG,8CAELU,eAAe,gBAAMhB,GAAkBC,OACvCgB,OAAQ,MACRC,YAAa,MACb7B,KAAM,GACN8B,KAAM,S,kDCpDGC,GAAb,WACE,WAAYC,EAAUC,EAAWC,EAAMC,GAAU,IAAD,4BAC9CC,KAAKF,KAAOA,EACZE,KAAKC,qBAAuBF,EAAQE,qBACpCD,KAAKE,kBAAoBH,EAAQG,mBAAqB,IACtDF,KAAKG,iBACHJ,EAAQI,kBAAoBC,GAC9BJ,KAAKK,WAAaN,EAAQM,WAC1BL,KAAKM,gBAAkBP,EAAQO,gBAE/BN,KAAKxB,MAAQ,IAAIwB,KAAKF,KAAKS,IAAIC,SAASC,IACxCT,KAAKlB,QAAU,IAAIkB,KAAKF,KAAKS,IAAIC,SAASE,IAC1CV,KAAKjB,KAAO,IAAIiB,KAAKF,KAAKS,IAAIC,SAASG,IACvCX,KAAKhB,KAAO,IAAIgB,KAAKF,KAAKS,IAAIC,SAASI,IAEvCZ,KAAKa,MAAQ5B,GAAevF,KAAI,SAACgG,GAAD,OAC9BoB,OAAOC,OAAOrB,EAAM,CAClBsB,UAAWtB,EAAKJ,YAAYO,GAC5BoB,aAAcvB,EAAKH,eAAeM,GAClCqB,WAAY,IAAI,EAAKpB,KAAKS,IAAIC,SAASW,IACvCC,cACmB,OAAjB1B,EAAKP,QACD,IAAI,EAAKW,KAAKS,IAAIC,SAASC,IAC3B,IAAI,EAAKX,KAAKS,IAAIC,SAASE,SAIrCV,KAAKqB,YAAYzB,EAAUC,GAC3BG,KAAKsB,kBAAkBtB,KAAKF,KAAKS,IAAIgB,gBA5BzC,gDA+BE,SAAY3B,EAAUC,GACpB,IAAMwB,EAAc,SAACG,EAAUC,GAC7BD,EAASH,YAAYzB,GACjB6B,EAASD,EAASzB,QAAQ0B,QAAUA,EACnCC,QAAQC,MAAM,wCAAyC9B,IAG9DwB,EAAYrB,KAAKxB,MAAOD,GAAkBC,MAAMqB,IAChDwB,EAAYrB,KAAKlB,QAASP,GAAkBO,QAAQe,IACpDwB,EAAYrB,KAAKjB,KAAMR,GAAkBQ,KAAKc,IAC9CwB,EAAYrB,KAAKhB,KAAMT,GAAkBS,KAAKa,IAE9CG,KAAKa,MAAMe,SACT,YAA6D,IAA1DV,EAAyD,EAAzDA,WAAYF,EAA6C,EAA7CA,UAAWI,EAAkC,EAAlCA,cAAeH,EAAmB,EAAnBA,aACvCI,EAAYH,EAAYF,GACxBK,EAAYD,EAAeH,QA9CnC,+BAmDE,SAAkB/C,GAChB8B,KAAKxB,MAAMuB,QAAQ8B,KAAO3D,EAC1B8B,KAAKlB,QAAQiB,QAAQ8B,KAAO3D,EAC5B8B,KAAKjB,KAAKgB,QAAQ8B,KAAO3D,MAtD7B,K,2BCGM4D,GAAc,oEAGPC,GAAb,WACE,WACEnC,GACC,qBACDI,KAAKJ,SAAWA,EAJpB,gDAOE,SACEA,GAEAI,KAAKJ,SAAWA,IAVpB,+DAmBG,yCAAA1I,EAAA,6DAAe8K,EAAf,+BAAiC,MAAjC,SACkBhC,KAAKiC,WADvB,mBAGYD,EAHZ,gCAIShC,KAAKkC,MAAMF,GAJpB,gDAnBH,kHA2BG,WAAY9C,GAAZ,UAAAhI,EAAA,yDACMgI,EADN,sBAES,IAAIiD,MAAM,kBAFnB,uBAKOnC,KAAKoC,kBAAkB,aAAc,CAAClD,IAL7C,gCAOQc,KAAKiC,YAPb,gDA3BH,sHAqCG,uBAAA/K,EAAA,+EACQ8I,KAAKoC,kBAAkB,iBAD/B,gDArCH,sHAyCG,WAAgBlD,GAAhB,UAAAhI,EAAA,+EACQ8I,KAAKoC,kBAAkB,aAAc,CAAClD,KAD9C,gDAzCH,wHA6CG,uBAAAhI,EAAA,+EACQ8I,KAAKoC,kBAAkB,eAD/B,gDA7CH,wHAiDG,uBAAAlL,EAAA,+EACQ8I,KAAKoC,kBAAkB,gBAD/B,gDAjDH,sHAqDG,uBAAAlL,EAAA,+EACQ8I,KAAKoC,kBAAkB,aAD/B,gDArDH,yHAyDG,WAAmBC,GAAnB,UAAAnL,EAAA,+EACQ8I,KAAKoC,kBAAkB,mBAAoB,CAACC,KADpD,gDAzDH,+HA6DG,WAAwBC,EAAQC,GAAhC,kBAAArL,EAAA,6DACOsL,EAAM,CACVF,SACAC,SACAE,QAAS,MACTvD,IAAI,IAAIwD,MAAOC,WALlB,SAQwB3C,KAAK4C,KAAKJ,GARlC,cAQOK,EARP,yBAUQA,EAASC,QAVjB,gDA7DH,oHA0EG,WAAWN,GAAX,qBAAAtL,EAAA,+EACQ,IAAI6L,SAAQ,SAACC,EAASC,GAS3B,EAAKrD,SAASgD,KACZJ,GATe,SAACb,EAAOuB,GACnBvB,EACFsB,EAAOtB,GAEPqB,EAAQE,UANf,2CA1EH,uFA4FE,SAAmBvB,EAAOwB,GAExB,IAAMC,EAAUzB,EAAMyB,QAChBC,EAAeD,EAAQE,OAAOH,GAChCI,EAAgBH,EACC,IAAjBC,IACFE,EAAgBH,EAAQI,UAAUH,EAAcA,EAAeF,EAAmB1J,SAEpFgK,OAAOF,GAAeG,QAAQP,KApGlC,kEAwGE,WAAkBQ,EAASC,GAA3B,UAAA1M,EAAA,+EAEUyM,EAFV,aAGU,IAAIxB,MAAM,iBAHpB,gCAKInC,KAAK6D,mBAAL,KAA2B/B,IACvB8B,GAAmC,SAAzBE,mHAAYC,UACxB/D,KAAK6D,mBAAL,eAA8B/B,GAA9B,YAA6C8B,IAPnD,yDAxGF,mIAqHE,WAA0BD,GAA1B,UAAAzM,EAAA,+EAEUyM,EAFV,aAGU,IAAIxB,MAAM,iBAHpB,gCAKInC,KAAK6D,mBAAL,KA5Ha,6EAuHjB,wDArHF,8DCfaG,GAAb,WACE,WAAYpE,EAAUC,EAAWoE,EAASlE,GACxC,IAAImE,EAD8C,qBAK9CA,EAFoB,kBAAbtE,EACLA,EAASuE,SAAS,OACL,IAAIC,KAAKC,UAAUC,kBAChC1E,EACAG,EAAQwE,qBAAuB,KAGlB,IAAIH,KAAKC,UAAUG,aAChC5E,EACAG,EAAQwE,qBAAuB,KAIpB3E,EAGjBI,KAAKF,KAAO,IAAIsE,KAAKF,GAEjBD,IACFjE,KAAKiE,QAAU,IAAIlC,GAAImC,GACvBlE,KAAKiC,SAAWjC,KAAKiE,QAAQhC,YAG3BlC,EAAQwB,iBACVvB,KAAKF,KAAKS,IAAIgB,eAAiBxB,EAAQwB,gBAEzCvB,KAAKyE,UAAY,IAAI9E,GAAUuE,EAAcrE,EAAWG,KAAKF,KAAMC,GACnEC,KAAK0E,aAAenG,GAAkBC,MAAMqB,GAC5CG,KAAK2E,eAAiBpG,GAAkBO,QAAQe,GAChDG,KAAK4E,YAAcrG,GAAkBQ,KAAKc,GAC1CG,KAAK6E,YAActG,GAAkBS,KAAKa,GAlC9C,gDAqCE,SAAYD,EAAUC,GACpBG,KAAKF,KAAKuB,YAAYzB,GACtBI,KAAKyE,UAAUpD,YAAYzB,EAAUC,GACrCG,KAAK8E,UAAUC,aAAalF,KAxChC,oBA2CE,SAAO3I,GACL,OAAO8N,KAAU9N,OA5CrB,KCJA8N,KAAUC,OAAO,CACfC,eAAgB,IAChBC,eAAgB,KCKX,IAAMrJ,GAAUC,wBAA0B,CAC/CqJ,SAAKvO,IAuCQwO,GA9Be,SAAC,GAAkB,IAAhB7N,EAAe,EAAfA,SACvB8N,EAAgCrH,cAAhCqH,SACR,EAAsBlL,qBAAtB,mBAAOgL,EAAP,KAAYG,EAAZ,KAyBA,OAtBAC,OAAOJ,IAAMA,EAEbI,OAAOjF,IAAM+E,EAEblH,qBAAU,WACR,GAAIkH,EAAU,CACZ,IAAMG,EAAUC,OAAOJ,EAASG,SAC1BE,EAAS,IAAIC,GAAIN,EAAUG,GAAS,EAAO,CAC/ClE,eAAgB+D,EAASO,gBACzB5F,qBAAsB,EACtBC,kBAAmB,IACnB+D,SAAS,EACT5D,WAAY,UACZC,gBAAiB,gBACjBwF,SAAU,GACVvB,oBAAqB,MAEvBgB,EAAOI,GACPH,OAAOO,SAAWJ,KAEnB,CAACL,IAEG,kBAAC,GAAQzI,SAAT,CAAkBC,MAAO,CAAEsI,QAAQ5N,ICvC7BwO,GALA,WAEb,OADgBnO,qBAAWiE,IAAnBsJ,K,iBCEVJ,KAAUC,OAAO,CACfC,eAAgB,IAChBC,eAAgB,KAGlB,I,6LAiBac,GAAkB,SAAClH,GAC9B,OAAOA,GAAQA,EAAK0F,WAAa1F,EAAK0F,UAAU1F,MAMrCmH,GAAW,SAACnH,GACvB,OAAOA,EACHA,EAAK0F,UAAU5D,MAAMnH,KACnB,gBACEwF,EADF,EACEA,GACAG,EAFF,EAEEA,IACAF,EAHF,EAGEA,QACAC,EAJF,EAIEA,KACAI,EALF,EAKEA,OACA5B,EANF,EAMEA,KACAqD,EAPF,EAOEA,aACAxB,EARF,EAQEA,YACA2B,EATF,EASEA,cACAJ,EAVF,EAUEA,UACAE,EAXF,EAWEA,WACAxB,EAZF,EAYEA,KAZF,MAaO,CACLR,KACAG,MACAF,UACAC,OACA+G,QAAS3G,EACT4G,eAAgBpF,EAChBE,aACAD,eACAxB,cACA2B,gBACAiF,UAAW,MACXC,iBAAkBvH,EAAK0F,UAAUjG,MAAMuB,QAAQ0B,QAC/C7D,OACA8B,WAGJ,IAGO6G,GAAa,yCAAG,WAAOC,EAAcnH,GAArB,oBAAAnI,EAAA,+EAEIsP,EAAaC,QAAQC,SAASrH,GAAKsH,OAFvC,uBAEjBC,EAFiB,EAEjBA,WAFiB,SAGKJ,EAAaC,QAAQI,kBAAkBF,OAH5C,cAGnBE,EAHmB,yBAIlB,IAAI7B,KAAU4B,GAAYtO,IAAI,IAAI0M,KAAU6B,KAJ1B,2DAMlB,IAAI7B,KAAU,IANI,0DAAH,wDAUb8B,GAAS,yCAAG,WAAON,EAAcnH,EAAKnB,GAA1B,UAAAhH,EAAA,+EAChBsP,EAAaC,QAAQM,QAAQ1H,EAAKnB,GAASyI,QAD3B,2CAAH,0DAITK,GAAmB,yCAAG,WACjCR,EACAS,EACA/F,EACAE,EACA/B,GALiC,kCAAAnI,EAAA,sEAQAkK,EAAcqF,QAC5CS,UAAUhG,EAAWnB,QAAQ0B,SAC7BkF,OAV8B,cAQ3BQ,EAR2B,gBAWL/F,EAAcqF,QAAQW,WAAWT,OAX5B,cAW3BU,EAX2B,gBAaXnG,EAAWuF,QAC9BS,UAAUV,EAAazG,QAAQ0B,SAC/BkF,OAf8B,cAa3BW,EAb2B,iBAiBPpG,EAAWuF,QAAQc,cAAcZ,OAjB1B,eAiB3BY,EAjB2B,iBAmBJN,EAAaR,QACvCS,UAAUhG,EAAWnB,QAAQ0B,SAC7BkF,OArB8B,eAmB3Ba,EAnB2B,OAuB3BC,EAAY,IAAIzC,KAAUsC,GAAShP,IAAI,IAAI0M,KAAUuC,IACrDG,EAAc,IAAI1C,KAAUwC,GAC5BG,EAAmBF,EAAUG,MAAMF,GAAaE,MAAM,IAAI5C,KAAU,IAEpE6C,EAAc,IAAI7C,KAAUmC,GAC/BS,MAAMH,GACNnP,IAAI,IAAI0M,KAAU,IAAI8C,IAAIT,IAEvBU,EAAa,IAAI/C,KAAUwC,GAC9BI,MAAMH,GACNnP,IAAI,IAAI0M,KAAU,IAAI8C,IAAI,KAjCI,KAmC/BD,EAnC+B,KAoC/BE,EApC+B,KAqCfJ,EAAiBrP,IAAI,IAAI0M,KAAU,IAAI8C,IAAI,KArC5B,KAsCbC,EAAWzP,IAAIuP,GAtCF,UAuCbtB,GAAcC,EAAcnH,GAvCf,8CAmC/BwI,YAnC+B,KAoC/BE,WApC+B,KAqC/BC,eArC+B,KAsC/BC,iBAtC+B,KAuC/BC,WAvC+B,mDAAH,8DA2CnBC,GAAO,yCAAG,WAAOjH,EAAYsF,EAActI,GAAjC,UAAAhH,EAAA,+EACdgK,EAAWuF,QACf0B,QAAQ3B,EAAazG,QAAQ0B,QAAS2G,UAAOC,UAAUC,YACvD1F,KAAK,CAAEf,KAAM3D,KAHK,2CAAH,0DAgBPqK,GAAK,yCAAG,WAAO/B,EAAcnH,EAAKmJ,EAAQtK,GAAlC,UAAAhH,EAAA,+EACZsP,EAAaC,QACjBgC,QACCpJ,EACA,IAAI2F,KAAUwD,GAAQZ,MAAM,IAAI5C,KAAU,IAAI8C,IAAI,KAAKY,YAExD9F,KAAK,CAAEf,KAAM3D,IACbyK,GAAG,mBAAmB,SAACC,GAEtB,OADAlH,QAAQmH,IAAID,GACLA,EAAGE,oBATK,2CAAH,4DAaLC,GAAO,yCAAG,WAAOvC,EAAcnH,EAAKmJ,EAAQtK,GAAlC,UAAAhH,EAAA,+EACdsP,EAAaC,QACjBuC,SACC3J,EACA,IAAI2F,KAAUwD,GAAQZ,MAAM,IAAI5C,KAAU,IAAI8C,IAAI,KAAKY,YAExD9F,KAAK,CAAEf,KAAM3D,IACbyK,GAAG,mBAAmB,SAACC,GAEtB,OADAlH,QAAQmH,IAAID,GACLA,EAAGE,oBATO,2CAAH,4DAYPG,GAAO,yCAAG,WAAOzC,EAAcnH,EAAKnB,GAA1B,UAAAhH,EAAA,+EACdsP,EAAaC,QACjBgC,QAAQpJ,EAAK,KACbuD,KAAK,CAAEf,KAAM3D,IACbyK,GAAG,mBAAmB,SAACC,GAEtB,OADAlH,QAAQmH,IAAID,GACLA,EAAGE,oBANO,2CAAH,0DAUPI,GAAS,yCAAG,WAAO1C,EAAcnH,EAAKnB,GAA1B,kBAAAhH,EAAA,+EAEIsP,EAAaC,QAAQ0C,SAAS9J,EAAKnB,GAASyI,OAFhD,uBAEb6B,EAFa,EAEbA,OAFa,kBAGd,IAAIxD,KAAUwD,IAHA,yDAKd,IAAIxD,KAAU,IALA,yDAAH,0DASToE,GAAM,yCAAG,WAAO5C,EAActI,GAArB,UAAAhH,EAAA,4DACV,IAAIwL,MAAOC,UAAY,KACtB,YAFS,yCAGX6D,EAAaC,QACjB4C,OACAzG,KAAK,CAAEf,KAAM3D,IACbyK,GAAG,mBAAmB,SAACC,GAEtB,OADAlH,QAAQmH,IAAID,GACLA,EAAGE,oBARI,OAWlBQ,MAAM,mBAXY,2CAAH,wD,UCrLNC,GAAc,SAAC3J,EAAoB6B,GAM9C,OAJiB,IADJ,IAAI2C,KAAKxE,GACIW,IAAIC,UAC3BgJ,GAASC,IACVhI,IAKSiI,GAAY,yCAAG,WAC1BxI,EACAsF,EACAtI,GAH0B,gBAAAhH,EAAA,+EAMQgK,EAAWuF,QACxCkD,UAAUzL,EAASsI,EAAazG,QAAQ0B,SACxCkF,OARqB,cAMlBgD,EANkB,yBASjBA,GATiB,yDAWjB,KAXiB,yDAAH,0DAeZC,GAAU,yCAAG,WACxBhK,EACAqB,EACA4I,GAHwB,kBAAA3S,EAAA,6DAKlBgK,EAAaqI,GAAY3J,EAAUqB,GALjB,kBAOQC,EAAWuF,QACtCS,UAAU2C,GACVlD,OATmB,cAOhBW,EAPgB,yBAUfA,GAVe,yDAYf,KAZe,yDAAH,0DCMRwC,GA/BE,WACf,MAA0B1P,mBAAS,GAAnC,mBAAO2P,EAAP,KAAcC,EAAd,KACQ1E,EAAqCrH,cAArCqH,SA0BR,OAxBAlH,qBAAU,WAER,GAAKkH,EAAL,CACA,IAAMxF,EAAO,IAAIsE,KAAKkB,GAWhB2E,EAAWC,YAAW,wBAAC,6BAAAhT,EAAA,sEACK4I,EAAKS,IAAI4J,iBADd,OACrBC,EADqB,OAEvBL,IAAUK,GACZJ,EAASI,GAHgB,2CAK1B,KAEH,OAAO,kBAAMC,cAAcJ,OAC1B,CAAC3E,IAEGyE,GCHMO,GAtBS,SAACrJ,GACvB,MAA8B7G,mBAAS,IAAI4K,KAAU,IAArD,mBAAOsC,EAAP,KAAgBiD,EAAhB,KACA,EAG6CtM,cAF3CC,EADF,EACEA,QACAoH,EAFF,EAEEA,SAEIyE,EAAQD,KAERU,EAAehQ,sBAAW,wBAAC,6BAAAtD,EAAA,sEACT0S,GAAWtE,EAAUrE,EAAc/C,GAD1B,OACzBoJ,EADyB,OAE/BiD,EAAW,IAAIvF,KAAUsC,IAFM,2CAG9B,CAACpJ,EAASoH,EAAUrE,IAQvB,OANA7C,qBAAU,WACJF,GAAWoH,GACbkF,MAED,CAACtM,EAASoH,EAAUiF,EAAYR,EAAO9I,IAEnCqG,GC1BImD,GAAmB,SAACnD,GAAsC,IAAlBF,EAAiB,uDAAN,EACxDsD,EAAiBpD,EAAQqD,UAAU,IAAI3F,KAAU,IAAI8C,IAAIV,IAC/D,OAAOsD,EAAeE,YAGXC,GAAoB,SAACvD,GAAsC,IAAlBF,EAAiB,uDAAN,EACzDsD,EAAiBpD,EAAQqD,UAAU,IAAI3F,KAAU,IAAI8C,IAAIV,IAC/D,OAAOsD,EAAeI,YAAY,IAGvBC,GAAwB,SAACzD,GAAsC,IAAlBF,EAAiB,uDAAN,EACnE,OAAOE,EAAQqD,UAAU,IAAI3F,KAAU,IAAI8C,IAAIV,IAAW4D,WCFtDC,GAAcrV,IAAO0C,IAAV,6GACN,SAAAxC,GAAK,OAAIA,EAAMI,MAAMC,MAAMI,KAAK,QAM5B2U,GAXqB,SAAC,GAAD,IAAGvT,EAAH,EAAGA,KAAH,OAClC,kBAACsT,GAAD,KAActT,I,qBCgCVwT,GAAcvV,IAAO0C,IAAV,sFACN,SAACxC,GAAD,OAAWA,EAAMI,MAAMC,MAAMI,KAAK,QAK9B6U,GApCqB,SAAC,GAAyB,IAAvBtO,EAAsB,EAAtBA,MAAOsK,EAAe,EAAfA,SAC5C,EAA6BhN,mBAAS,GAAtC,mBAAOiR,EAAP,KAAcC,EAAd,KACA,EAAyBlR,mBAAS,GAAlC,mBAAOmR,EAAP,KAAYC,EAAZ,KASA,OAPApN,qBAAU,WACa,kBAAVtB,IACTwO,EAAYC,GACZC,EAAU1O,MAEX,CAACA,IAGF,kBAACqO,GAAD,KACmB,iBAATrO,EACNA,EAEA,kBAAC,KAAD,CACEuO,MAAOA,EACPE,IAAKA,EACLnE,cACevQ,IAAbuQ,EAAyBA,EAAWmE,EAAM,EAAI,EAAIA,EAAM,IAAM,EAAI,EAEpElJ,SAAU,EACVoJ,UAAU,QCjBPC,GAAkB,WAC3B,IAAIjG,EAAkB,GAClBkG,EAAiB,kDACjBC,EAAsB,WACpBnU,EAAO+N,OAAOqG,SAASpU,KAM7B,MALI,+CAA+CqU,KAAKrU,KACnDgO,EAAU,GACVkG,EAAS,oCACTC,EAAc,IAEZ,CACHnG,UACAkG,SACAC,gB,qBCLR,GAEIF,KAwDEK,IA1DN,GACEH,YAyDoBhW,IAAO0C,IAAV,oGAMb0T,GAAuBpW,IAAO0C,IAAV,wIAKP,SAACxC,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAGnCiV,GApE4B,SAAC,GAAmB,IRP/BlN,EQOc5E,EAAgB,EAAhBA,UAC5C,EAA2B8D,cAAnBC,EAAR,EAAQA,QAASgE,EAAjB,EAAiBA,MAEXgK,EAAqB1R,uBAAY,WACrCL,IACA+H,MACC,CAAC/H,EAAW+H,IAETkD,EAAMY,KACNmG,GRhBwBpN,EQgBOqG,IRftBrG,EAAK2F,aQgBd0H,EAAe9B,GAAgB6B,GAErC,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAYxU,KAAK,eACjB,kBAAC,GAAD,KACE,kBAAC,EAAD,MAEA,yBAAKiE,MAAO,CAAEyQ,QAAS,SACrB,kBAACL,GAAD,KACE,kBAAC,EAAD,KACE,yBAAKvQ,IAAK6Q,KAAU3Q,OAAO,KAAKC,MAAO,CAAEC,WAAY,MAEvD,kBAACkQ,GAAD,KACE,kBAAC,GAAD,CAAOjP,MAAO2N,GAAiB2B,EAAc,MAC7C,kBAAC,GAAD,CAAOzU,KAAK,sBAKlB,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEF,KAAI,sCAAiCyG,GACrCvG,KAAK,mBACLlB,QAAQ,cAEV,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEiB,QAASwU,EACTvU,KAAK,WACLlB,QAAQ,eAGZ,kBAAC,GAAD,KACE,kBAAC,EAAD,CACIiB,QAASyC,EACTxC,KAAK,SACLlB,QAAQ,iBC7Bd8V,GAAsB3W,IAAO0C,IAAV,4BAEVkU,GAlCqC,SAAC1W,GAEnD,MAAgCmH,GAAS,kBAAC,GAAD,OAAlCwP,EAAP,oBACA,EAAuCxP,GAAS,kBAAC,GAAD,MAAyB,YAAlEyP,EAAP,oBAEQxO,EAAYD,cAAZC,QAEFyO,EAAoBnS,uBAAY,WACpCkS,MACC,CAACA,IAEJ,OACE,kBAACH,GAAD,KACIrO,EAQA,kBAAC,EAAD,CACExG,QAAS+U,EACT9V,KAAK,KACLgB,KAAK,aACL1B,YAAU,IAXZ,kBAAC,EAAD,CACEyB,QAASiV,EACThW,KAAK,KACLgB,KAAK,gBACL1B,YAAU,MCRd2W,GAAYhX,IAAOiX,IAAV,wEAKT/V,GAAalB,YAAOkF,IAAPlF,CAAH,6SACL,SAACE,GAAD,OAAWA,EAAMI,MAAMC,MAAMI,KAAK,QAE3B,SAACT,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAC9B,SAAClB,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAGrC,SAAClB,GAAD,OAAWA,EAAMI,MAAMC,MAAMI,KAAK,QAGlC,SAACT,GAAD,OAAWA,EAAMI,MAAMC,MAAM6B,QAAQC,QAG9B,SAACnC,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAC9B,SAAClB,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAsBrC8V,IAlBYlX,IAAOsB,EAAV,6SACb,SAACpB,GAAD,OAAWA,EAAMI,MAAMC,MAAMI,KAAK,QAE3B,SAACT,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAC9B,SAAClB,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAGrC,SAAClB,GAAD,OAAWA,EAAMI,MAAMC,MAAMI,KAAK,QAGlC,SAACT,GAAD,OAAWA,EAAMI,MAAMC,MAAM6B,QAAQC,QAG9B,SAACnC,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAC9B,SAAClB,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MArDpB,SAAC,GAAkB,IAAhB+V,EAAe,EAAfA,SACjC,OACE,kBAACH,GAAD,KACGG,GACC,oCACF,kBAAC,GAAD,CAAY9R,OAAK,EAACC,gBAAgB,SAAStD,GAAG,KAA9C,QAGA,kBAAC,GAAD,CAAYqD,OAAK,EAACC,gBAAgB,SAAStD,GAAG,UAA9C,YCkBAoV,GAAoBpX,IAAO0C,IAAV,qGAOjB2U,GAAerX,IAAO0C,IAAV,wDAIZ4U,GAAoBtX,IAAO0C,IAAV,kKAGX,SAACxC,GAAD,OAAWA,EAAMI,MAAMiX,cAEpB,SAACrX,GAAD,OAAWA,EAAMI,MAAMoF,aAYhC8R,IATmBxX,IAAO0C,IAAV,gJASa1C,IAAO0C,IAAV,4MA2BjB+U,IAhBUzX,IAAOC,OAAV,oRA3DgB,SAAC,GAAgD,EAA9CyX,oBAA+C,IAAD,IAAzBC,kBAAyB,SACrF,OACE,kBAACN,GAAD,KACE,kBAAC,GAAD,CAAWtW,KAAK,MACd,kBAACuW,GAAD,KACE,kBAACF,GAAD,KACE,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAKD,UAAU,IACdQ,GACD,kBAACH,GAAD,KACE,kBAAC,GAAD,YCjBGI,GALCzR,wBAA4B,CAC1C0R,MAAO,GACPC,YAAa,ICwBAC,GApBS,SAAC,GAAkB,IAAhBnW,EAAe,EAAfA,SACzB,EAAsB4C,mBAAS,GAAxBsT,EAAP,oBAEMtI,EAAMY,KAGNyH,GAFcxP,cAAZC,QAEMgI,GAASd,IAEvB,OACE,kBAAC,GAAQvI,SAAT,CACEC,MAAO,CACL2Q,QACAC,gBAGDlW,IChBQuE,2BAAmC,CAChD6R,aAAc,GACdC,iBAAkB,SAACjF,O,SC+BRkF,GAAkB,SAACF,GAAD,MAA2D,CACxFG,KArCuB,mBAsCvBH,iBAGWI,GAAkC,CAC7CC,aAAa,EACbL,aAAc,IAmCDM,GAhCC,SAACC,EAA0BC,GACzC,OAAQA,EAAOL,MACb,IAlDoB,kBAmDlB,OAAO,6BACFI,GADL,IAEEP,aAAa,6BACRO,EAAMP,cADC,mBAETQ,EAAOC,YAAYC,KAAOF,EAAOC,gBAGxC,IAzDuB,qBA0DrB,OAAO,6BACFF,GADL,IAEEP,aAAa,6BACRO,EAAMP,cADC,mBAETQ,EAAOG,OAFE,6BAGLJ,EAAMP,aAAaQ,EAAOG,SAHrB,IAIRC,QAASJ,EAAOI,cAIxB,IAnEqB,mBAoEnB,OAAO,6BACFL,GADL,IAEEP,aAAcQ,EAAOR,aACrBK,aAAa,IAEjB,QACE,OAAOE,IChCEM,GArCwB,SAAC,GAAkB,IAAhBjX,EAAe,EAAfA,SACxC,EAAkDkX,qBAAWR,GAASF,IAAtE,0BAASC,EAAT,EAASA,YAAaL,EAAtB,EAAsBA,aAAgBe,EAAtC,KAEMC,EAAuBpU,uBAAY,SAACoO,GACxC+F,EDgB+E,CACjFZ,KA5BsB,kBA6BtBM,YClB0BzF,MACvB,CAAC+F,IAEEE,EAAoBrU,sBAAW,wBAAC,+BAAAtD,EAAA,sDACpC,IACQ4X,EAASC,aAAaC,QAAQ,gBAC9BC,EAAMC,KAAKC,MAAML,IAA8B,GACrDH,EAASb,GAAgBmB,IACzB,MAAOG,GACP1N,QAAQmH,IAAIuG,GANsB,2CAQnC,CAACT,IAYJ,OAVAvQ,qBAAU,WACJ6P,GACFc,aAAaM,QAAQ,eAAgBH,KAAKI,UAAU1B,MAErD,CAACK,EAAaL,IAEjBxP,qBAAU,WACRyQ,MACC,CAACA,IAGF,kBAAC,GAAQhS,SAAT,CAAkBC,MAAO,CACvB8Q,eACAC,iBAAkBe,IAEjBpX,ICnCP,GAAiCkU,KAAZjG,IAArB,GAAQmG,YAAR,GAAqBnG,SAEf8J,GAAwBhR,GAsBxBqO,GAAYhX,IAAOiX,IAAV,wEAKT/V,GAAalB,IAAOsB,EAAV,qOAEE,SAACpB,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAC9B,SAAClB,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAWnC8V,GAvCO,WACpB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE1U,OAAO,SACPX,KAAI,oCAA+B8X,GAAsB/Q,MAAMiH,IAA3D,UAFN,mBAOA,kBAAC,GAAD,CACErN,OAAO,SACPX,KAAI,sCAAiC8X,GAAsBxQ,KAAK0G,IAA5D,UAFN,mBCRA+J,GAAe5Z,IAAO6Z,OAAV,oGAKZC,GAAoB9Z,IAAO0C,IAAV,gLAIX,SAAAxC,GAAK,OAAIA,EAAMI,MAAMiX,cAClB,SAAArX,GAAK,OAAIA,EAAMI,MAAMoF,aAKrBqU,GAvBU,kBACvB,kBAACH,GAAD,KACE,kBAACE,GAAD,KACE,kBAAC,GAAD,SCOAE,GAAaha,IAAO0C,IAAV,4BAEVuX,GAAaja,IAAO0C,IAAV,mKAKa,SAAAxC,GAAK,OAA6B,EAAzBA,EAAMI,MAAMiX,cAGnC2C,GAnBQ,SAAC,GAAD,IAAGtY,EAAH,EAAGA,SAAH,OACrB,kBAACoY,GAAD,KACE,kBAACC,GAAD,KACGrY,GAEH,kBAAC,GAAD,QCYEuY,GAAmBna,IAAO0C,IAAV,2RASF,SAACxC,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAClC,SAAClB,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAI1CgZ,GAAapa,IAAO0C,IAAV,mHAQV2X,GAAcra,IAAOsa,GAAV,mKACN,SAACpa,GAAD,OAAWA,EAAMI,MAAMC,MAAME,SASlC8Z,GAAiBva,IAAOwa,GAAV,0IACT,SAACta,GAAD,OAAWA,EAAMI,MAAMC,MAAME,SAQzBga,GArD+B,SAAC,GAA+B,IAA7BzS,EAA4B,EAA5BA,KAAM0S,EAAsB,EAAtBA,SAAUxS,EAAY,EAAZA,MAC/D,OACE,oCACE,kBAACiS,GAAD,KACGnS,GAAQ,kBAACoS,GAAD,KAAapS,GACrBE,GAAS,kBAACmS,GAAD,KAAcnS,GACxB,kBAACqS,GAAD,KAAiBG,MCRVC,GANC,SAACrR,GAGf,OAFkBrH,qBAAW2Y,IAArB/C,MACWgD,MAAK,SAAA1R,GAAI,OAAIA,EAAKG,KAAOA,MCc/BwR,GAZG,SAAClK,GACjB,IAAQtI,EAAYD,cAAZC,QAQR,MAAO,CAAEyS,SANYnW,sBAAW,wBAAC,6BAAAtD,EAAA,sEACVkS,GAAO5C,EAActI,GADX,cACzBqQ,EADyB,OAE/B7M,QAAQmH,IAAI0F,GAFmB,kBAGxBA,GAHwB,2CAI9B,CAACrQ,EAASsI,MCoBAoK,GAxBK,SAACvR,GACnB,MAA8BjF,mBAAS,IAAI4K,KAAU,IAArD,mBAAOsC,EAAP,KAAgBiD,EAAhB,KACA,EAG6CtM,cAF3CC,EADF,EACEA,QAGIkH,GAJN,EAEEE,SAEUU,MACNQ,EAAeP,GAAgBb,GAC/B2E,EAAQD,KAERU,EAAehQ,sBAAW,wBAAC,6BAAAtD,EAAA,sEACT4P,GAAUN,EAAcnH,EAAKnB,GADpB,OACzBoJ,EADyB,OAE/BiD,EAAW,IAAIvF,KAAUsC,IAFM,2CAG9B,CAACpJ,EAASsI,EAAcpB,IAQ3B,OANAhH,qBAAU,WACJF,GAAWsI,GAAgBpB,GAC7BoF,MAED,CAACtM,EAAS6L,EAAOvD,EAAc+D,EAAYnF,IAEvCkC,GCVMuJ,GAdG,SAACxR,GACjB,IAAQnB,EAAYD,cAAZC,QACFkH,EAAMY,KACNQ,EAAeP,GAAgBb,GAQrC,MAAO,CAAE0L,SANYtW,sBAAW,wBAAC,6BAAAtD,EAAA,sEACV+R,GAAQzC,EAAcnH,EAAKnB,GADjB,cACzBqQ,EADyB,OAE/B7M,QAAQmH,IAAI0F,GAFmB,kBAGxBA,GAHwB,2CAI9B,CAACrQ,EAASmB,EAAK+F,MC0Cd2L,GAAmBnb,IAAO0C,IAAV,mGAKhB0Y,GAAoBpb,IAAO0C,IAAV,kHAGP,SAACxC,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MASzCia,IALerb,IAAO0C,IAAV,iEACN,SAACxC,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAChC,SAAClB,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAGXpB,IAAO0C,IAAV,mJAQb4Y,GA5DyB,SAAC,GAAa,IAAX7R,EAAU,EAAVA,IACnC8R,EAAWP,GAAYvR,GAC7B,EAAkCjF,oBAAS,GAA3C,mBAAOgX,EAAP,KAAkBC,EAAlB,KACQP,EAAaD,GAAUxR,GAAvByR,SAER,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACG,GAAD,KACE,kBAACF,GAAD,KACE,kBAAC,EAAD,KACE,yBAAKtV,IAAK6Q,KAAU3Q,OAAO,KAAKC,MAAO,CAAEC,WAAY,MAEvD,kBAAC,GAAD,CAAOiB,MAAO+N,GAAkBsG,EAAU,MAC1C,kBAAC,GAAD,CAAOxZ,KAAK,oBAEd,kBAACqZ,GAAD,KACE,kBAAC,EAAD,CACEhb,UAAWmb,EAASvG,YAAcwG,EAClCzZ,KAAMyZ,EAAY,aAAe,UACjC3a,QAAS,YACTD,QAAM,EACNkB,QAAO,wBAAE,uBAAAR,EAAA,6DACPma,GAAa,GADN,SAEDP,IAFC,OAGPO,GAAa,GAHN,kDCRRC,GA1BM,SAACpQ,GACpB,MAAkC9G,mBAAS,IAAI4K,KAAU,IAAzD,mBAAO2E,EAAP,KAAkB4H,EAAlB,KACQrT,EAAqDD,cAArDC,QACFkH,EAAMY,KACNQ,EAAeP,GAAgBb,GAE/BoM,EAAiBhX,sBAAW,wBAAC,6BAAAtD,EAAA,sEACTwS,GACtBxI,EACAsF,EACAtI,GAJ+B,OAC3ByL,EAD2B,OAMjC4H,EAAa,IAAIvM,KAAU2E,IANM,2CAOhC,CAACzL,EAASsI,EAActF,IAU3B,OARA9C,qBAAU,WACJF,GAAWsI,GAAgBtF,GAC7BsQ,IAEF,IAAIC,EAAkBvH,YAAYsH,EAAgB,KAClD,OAAO,kBAAMnH,cAAcoH,MAC1B,CAACvT,EAASsI,EAActF,IAEpByI,GCRM+H,GAjBI,SAACxQ,GAClB,IAAQhD,EAAqDD,cAArDC,QACFkH,EAAMY,KACNQ,EAAeP,GAAgBb,GAWrC,MAAO,CAAEuM,UATanX,sBAAW,wBAAC,6BAAAtD,EAAA,+EAEbiR,GAAQjH,EAAYsF,EAActI,GAFrB,cAExB0K,EAFwB,yBAGvBA,GAHuB,0DAKvB,GALuB,yDAO/B,CAAC1K,EAASgD,EAAYsF,MCMZoL,GApBE,SAACvS,GAChB,IAAQnB,EAAYD,cAAZC,QACFkH,EAAMY,KAeZ,MAAO,CAAE6L,QAbWrX,sBAAW,yCAC7B,WAAOgO,GAAP,gBAAAtR,EAAA,sEACuBqR,GACnBtC,GAAgBb,GAChB/F,EACAmJ,EACAtK,GALJ,OACQqQ,EADR,OAOE7M,QAAQmH,IAAI0F,GAPd,2CAD6B,sDAU7B,CAACrQ,EAASmB,EAAK+F,MCSJ0M,GArBU,SAACzS,GACxB,MAA8BjF,mBAAS,IAAI4K,KAAU,IAArD,mBAAOsC,EAAP,KAAgBiD,EAAhB,KACQrM,EAAiCD,cAAjCC,QACFkH,EAAMY,KACNQ,EAAeP,GAAgBb,GAC/B2E,EAAQD,KAERU,EAAehQ,sBAAW,wBAAC,6BAAAtD,EAAA,sEACTgS,GAAU1C,EAAcnH,EAAKnB,GADpB,OACzBoJ,EADyB,OAE/BiD,EAAW,IAAIvF,KAAUsC,IAFM,2CAG9B,CAACpJ,EAASmB,EAAK+F,IAQlB,OANAhH,qBAAU,WACJF,GAAWkH,GACboF,MAED,CAACtM,EAASmB,EAAKkL,EAAYR,EAAO3E,IAE9BkC,GCJMyK,GAhBI,SAAC1S,GAClB,IAAQnB,EAAYD,cAAZC,QACFkH,EAAMY,KACNQ,EAAeP,GAAgBb,GAUrC,MAAO,CAAE4M,UARaxX,sBAAW,yCAC/B,WAAOgO,GAAP,gBAAAtR,EAAA,sEACuB6R,GAAQvC,EAAcnH,EAAKmJ,EAAQtK,GAD1D,OACQqQ,EADR,OAEE7M,QAAQmH,IAAI0F,GAFd,2CAD+B,sDAK/B,CAACrQ,EAASmB,EAAK+F,MCUb6M,GAAqBrc,IAAO0C,IAAV,+IAEK,SAAAxC,GAAK,OAAIA,EAAMI,MAAMC,MAAMI,KAAK,QAG9C,SAAAT,GAAK,OAAIA,EAAMI,MAAMc,QAAQ,MAGtCkb,GAActc,IAAOuc,MAAV,gLAGN,SAAArc,GAAK,OAAIA,EAAMI,MAAMC,MAAMI,KAAK,QAS5B6b,GApCqB,SAAC,GAM9B,IALLC,EAKI,EALJA,aACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,eACA1V,EACI,EADJA,MAEA,OACE,kBAACmV,GAAD,OACKO,GAAkBA,EACrB,kBAACN,GAAD,CAAaK,YAAaA,EAAazV,MAAOA,EAAOwV,SAAUA,MAC5DD,GAAgBA,ICwBnBI,GAAmB7c,IAAO0C,IAAV,4BAEhBS,GAAenD,IAAO0C,IAAV,iDACL,SAAAxC,GAAK,OAAIA,EAAMI,MAAMc,QAAQ,MAGpC0b,GAA8B9c,IAAO0C,IAAV,wEAK3Bqa,GAAgB/c,IAAO0C,IAAV,iJAER,SAAAxC,GAAK,OAAIA,EAAMI,MAAMC,MAAMI,KAAK,QAOrCqc,GAAoBhd,IAAOid,KAAV,kEACZ,SAAA/c,GAAK,OAAIA,EAAMI,MAAMC,MAAMI,KAAK,QAI5Buc,GA3D+B,SAAC,GAMxC,IALLC,EAKI,EALJA,IACAvT,EAII,EAJJA,OACA8S,EAGI,EAHJA,SACAU,EAEI,EAFJA,YACAlW,EACI,EADJA,MAEA,OACE,kBAAC2V,GAAD,KACE,kBAACE,GAAD,KAAgBI,EAAIE,iBAApB,IAAuCzT,EAAvC,cACA,kBAAC,GAAD,CACE6S,aACE,kBAACK,GAAD,KACE,kBAACE,GAAD,KAAoBpT,GACpB,kBAAC,GAAD,MACA,6BACE,kBAAC,EAAD,CAAQ7I,KAAK,KAAKF,QAAS,YAAakB,KAAK,MAAMD,QAASsb,MAIlEV,SAAUA,EACVC,YAAY,IACZzV,MAAOA,MCoCAoW,GApDmC,SAAC,GAK5C,IAJLH,EAII,EAJJA,IACA7Y,EAGI,EAHJA,UACAC,EAEI,EAFJA,UAEI,IADJgZ,iBACI,MADQ,GACR,EACJ,EAAsB/Y,mBAAS,IAA/B,mBAAO8I,EAAP,KAAYkQ,EAAZ,KACA,EAAkChZ,oBAAS,GAA3C,mBAAOgX,EAAP,KAAkBC,EAAlB,KAEMgC,EAAclb,mBAAQ,WAC1B,OAAO4S,GAAsBgI,KAC5B,CAACA,IAEEO,EAAe9Y,uBACnB,SAAC4U,GACCgE,EAAOhE,EAAEmE,cAAczW,SAEzB,CAACsW,IAGGI,EAAkBhZ,uBAAY,WAClC4Y,EAAOC,KACN,CAACA,EAAaD,IAEjB,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAYzb,KAAI,kBAAawb,EAAb,aAChB,kBAAC,GAAD,CACErW,MAAOoG,EACP8P,YAAaQ,EACblB,SAAUgB,EACVP,IAAKM,EACL7T,OAAQ2T,IAEV,kBAAC,GAAD,KACE,kBAAC,EAAD,CAAQxb,KAAK,SAASlB,QAAQ,YAAYiB,QAASyC,IACnD,kBAAC,EAAD,CACEnE,UAAWkN,GAAc,KAAPA,GAAckO,EAChCzZ,KAAMyZ,EAAY,uBAAyB,UAC3C3a,QAAS,WACTiB,QAAO,wBAAE,uBAAAR,EAAA,6DACPma,GAAa,GADN,SAEDnX,EAAUgJ,GAFT,OAGPmO,GAAa,GACblX,IAJO,gDCYJsZ,GApDqC,SAAC,GAK9C,IAJLvZ,EAII,EAJJA,UACAC,EAGI,EAHJA,UACA4Y,EAEI,EAFJA,IAEI,IADJI,iBACI,MADQ,GACR,EACJ,EAAsB/Y,mBAAS,IAA/B,mBAAO8I,EAAP,KAAYkQ,EAAZ,KACA,EAAkChZ,oBAAS,GAA3C,mBAAOgX,EAAP,KAAkBC,EAAlB,KAEMgC,EAAclb,mBAAQ,WAC1B,OAAO4S,GAAsBgI,KAC5B,CAACA,IAEEO,EAAe9Y,uBACnB,SAAC4U,GACCgE,EAAOhE,EAAEmE,cAAczW,SAEzB,CAACsW,IAGGI,EAAkBhZ,uBAAY,WAClC4Y,EAAOC,KACN,CAACA,EAAaD,IAEjB,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAYzb,KAAI,mBAAcwb,KAC9B,kBAAC,GAAD,CACEH,YAAaQ,EACblB,SAAUgB,EACVxW,MAAOoG,EACP6P,IAAKM,EACL7T,OAAQ2T,IAEV,kBAAC,GAAD,KACE,kBAAC,EAAD,CAAQxb,KAAK,SAASlB,QAAQ,YAAYiB,QAASyC,IACnD,kBAAC,EAAD,CACEnE,SAAUob,EACVzZ,KAAMyZ,EAAY,uBAAyB,UAC3C3a,QAAS,WACTiB,QAAO,wBAAE,uBAAAR,EAAA,6DACPma,GAAa,GADN,SAEDnX,EAAUgJ,GAFT,OAGPmO,GAAa,GACblX,IAJO,gD,qBC+Db4W,GAAmBnb,IAAO0C,IAAV,mGAKhB0Y,GAAoBpb,IAAO0C,IAAV,kHAGP,SAACxC,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAIzC0c,GAAqB9d,IAAO0C,IAAV,iEACZ,SAACxC,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAChC,SAAClB,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAGpCia,GAAyBrb,IAAO0C,IAAV,kJAQbqb,GA9GqB,SAAC,GAAoC,IAAlCzS,EAAiC,EAAjCA,WAAY7B,EAAqB,EAArBA,IAAK8T,EAAgB,EAAhBA,UACtD,EAAkD/Y,oBAAS,GAA3D,mBAAOwZ,EAAP,KAA0BC,EAA1B,KAEMlK,EAAY2H,GAAapQ,GACvByQ,EAAcD,GAAWxQ,GAAzByQ,UAEFmC,EAAexJ,GAAgBpJ,EAAWnB,QAAQ0B,SAClDsS,EAAgBjC,GAAiBzS,GAE/BwS,EAAYD,GAASvS,GAArBwS,QACAG,EAAcD,GAAW1S,GAAzB2S,UAER,EAA2B/U,GACzB,kBAAC,GAAD,CACE8V,IAAKe,EACL5Z,UAAW2X,EACXsB,UAAWA,KAJRa,EAAP,oBAQA,EAA4B/W,GAC1B,kBAAC,GAAD,CACE8V,IAAKgB,EACL7Z,UAAW8X,EACXmB,UAAWA,KAJRc,EAAP,oBAQMC,EAAgB1Z,sBAAW,wBAAC,uBAAAtD,EAAA,sEAE9B2c,GAAqB,GAFS,SAGTlC,IAHS,eAM5BkC,GAAqB,GANO,gDAS9BnS,QAAQmH,IAAR,MAT8B,yDAW/B,CAAC8I,EAAWkC,IAEf,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,EAAD,KACE,yBAAKpY,IAAK0Y,KAAcxY,OAAO,KAAKC,MAAO,CAAEC,WAAY,MAE3D,kBAAC,GAAD,CAAOiB,MAAO+N,GAAkBkJ,KAChC,kBAAC,GAAD,CAAOpc,KAAI,UAAKwb,EAAL,qBAEb,kBAAC,GAAD,KACIxJ,EAAUiB,WAQV,oCACE,kBAAC,EAAD,CACEjT,KAAK,UACLlB,QAAS,WACTiB,QAASsc,IAEX,kBAACN,GAAD,MACA,kBAAC,EAAD,CACE1d,SAAU+d,EAAcK,GAAG,IAAIpP,KAAU,IACzCrN,KAAK,WACLnB,QAAM,EACNC,QAAS,YACTiB,QAASuc,IAEX,kBAACP,GAAD,OArBF,kBAAC,EAAD,CACE1d,SAAU4d,EACVnd,QAAS,WACTiB,QAASwc,EACTvc,KAAI,iBCad0c,GAAaze,IAAO0C,IAAV,+KAUVgc,GAAqB1e,IAAO0C,IAAV,gLAUlBic,GAAoB3e,IAAO0C,IAAV,4IAkBR0L,IATIpO,IAAOwa,GAAV,gJApHO,WACrB,IAAQoE,EAAWC,cAAXD,OAER,EASIjE,GAAQiE,IAAW,CACrBnV,IAAK,EACL8G,QAAS,GACTC,eAAgB,GAChBnF,aAAc,GACdoF,UAAW,GACXjH,KAAM,GACNxB,KAAM,GACNuB,QAAS,IAhBTE,EADF,EACEA,IACA8G,EAFF,EAEEA,QACAC,EAHF,EAGEA,eACAnF,EAJF,EAIEA,aACAoF,EALF,EAKEA,UACAjH,EANF,EAMEA,KANF,EAOExB,KAPF,EAQEuB,QAYFf,qBAAU,WACRoH,OAAOkP,SAAS,EAAG,KAClB,IAEH,IAAMtP,EAAMY,KACJV,EAAarH,cAAbqH,SAEFpE,EAAa/I,mBAAQ,WACzB,OAAOoR,GAAYjE,EAAsBc,KACxC,CAACd,EAAUc,IAIRuO,GAFejE,GAAUzK,GAAgBb,IAAvCuL,SAEYxY,mBAAQ,WAC1B,OAAOgO,EAAQyO,gBACd,CAACzO,KAEkBhO,mBAAQ,WAC5B,OAAOkO,EAAUuO,gBAChB,CAACvO,IAEJ,OACE,oCACE,kBAAC,GAAD,CACEiK,SAAQ,kBAAaqE,EAAb,4BACR7W,MAAK,UAAKsB,KAEZ,kBAACiV,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,GAAD,CAASlV,IAAKA,KAEhB,kBAAC,EAAD,MACA,kBAACkV,GAAD,KACE,kBAAC,GAAD,CACErT,WAAYA,EACZ7B,IAAKA,EACL8T,UAAWhN,EAAQyO,kBAIzB,kBAAC,EAAD,CAAQje,KAAK,OACb,kBAAC,EAAD,CAAQA,KAAK,OACb,yBACEiF,MAAO,CACLiZ,WAAY,SACZxI,QAAS,OACTyI,KAAM,EACNC,eAAgB,WAGlB,kBAAC,EAAD,CACEpd,KAAK,gBACL5B,gBAAgB,oBAChBY,KAAK,KACLc,KAAI,0DAAqDwJ,MAG7D,kBAAC,EAAD,CAAQtK,KAAK,W,SCjFfqe,GAAOvc,YAAH,wHASJwc,GAAerf,IAAO0C,IAAV,+HAOZ4c,GAAYtf,IAAO0C,IAAV,uGAGG0c,IAGZG,GAAavf,IAAO0C,IAAV,6CACL,SAACxC,GAAD,OAAWA,EAAMI,MAAMC,MAAMI,KAAK,QAG9B6e,GArCuB,SAAC,GAAc,IAAZzd,EAAW,EAAXA,KACvC,OACE,kBAACsd,GAAD,KACE,kBAAC,EAAD,KACE,kBAACC,GAAD,wBAECvd,GAAQ,kBAACwd,GAAD,KAAaxd,KCPf0d,GALE,WAEf,MAAO,CADWxd,qBAAW2Y,IAArB/C,QCAG6H,GAAU,SAACC,GAAyC,IAA1BnO,EAAyB,uDAAd,EAChD,OAAOmO,EAAG5K,UAAU,IAAI3F,KAAU,IAAI8C,IAAIV,IAAWwD,YC8DxC4K,GA3CW,WACxB,IxCD8BzW,EwCC9B,EAA+B3E,mBAAS,IAAxC,mBAAOqb,EAAP,KAAiBlL,EAAjB,KACQrM,EAAqDD,cAArDC,QACFkH,EAAMY,KACNyH,EAAQvH,GAASd,GACjBoB,EAAeP,GAAgBb,GAC/BsQ,GxCNwB3W,EwCMMqG,IxCLrBrG,EAAK0F,WAAa1F,EAAK0F,UAAUzF,KwCM1C+K,EAAQD,KAER6L,EAAsBnb,sBAAW,wBAAC,6BAAAtD,EAAA,sEACK6L,QAAQ6S,IACjDnI,EAAM/T,KACJ,gBACE2F,EADF,EACEA,IACA6B,EAFF,EAEEA,WACAE,EAHF,EAGEA,cAHF,OASE4F,GACER,EACAkP,EACAxU,EACAE,EACA/B,OAjB8B,OAChCoW,EADgC,OAsBtClL,EAAWkL,GAtB2B,2CAuBrC,CAACvX,EAASsI,EAAcpB,IAQ3B,OANAhH,qBAAU,WACJF,GAAWsI,GAAgBpB,GAC7BuQ,MAED,CAACzX,EAAS6L,EAAOvD,EAAc+D,EAAYnF,IAEvCqQ,G,qBCoCHI,GAAoC,SAAC,GAAc,IAAZ9W,EAAW,EAAXA,KAC3C,EAAkC3E,mBAAS,GAA3C,mBACA,GADA,UACsCA,mBAAS,IAA/C,mBAAoB0b,GAApB,WAEQ5X,EAAYD,cAAZC,QACAkI,EAAmBrH,EAAnBqH,eACFhB,EAAMY,KAuDZ,OAzCA5H,qBAAU,WAAM,8CACd,6BAAAlH,EAAA,0DACMkO,EADN,iEAEuB0B,GACnBb,GAAgBb,GAChBgB,EACAlI,GALJ,OAEQ6X,EAFR,OAOED,EAAeR,GAAQS,EAAQ,KAPjC,4CADc,sBAUV3Q,GAAOlH,GAVI,WAAD,wBAWZ8X,KAED,CAAC5Q,EAAKgB,EAAgBlI,EAAS4X,IAoB9B/W,EAAKmJ,YAAcnJ,EAAKmJ,WAAW+N,QACxB,MAEAlX,EAAKmJ,WAAL,UACNnJ,EAAKmJ,WAAWN,MAAM,IAAI5C,KAAU,MAAM4F,WADpC,kBAET,cAIJ,kBAAC,GAAD,KACwB,YAArB7L,EAAKU,aAA6B,kBAACyW,GAAD,MACnC,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,EAAD,KACE,yBACE1a,IAAK6Q,KACL3Q,OAAO,KACPC,MACmB,OAAjBmD,EAAKI,QACD,CAAEiX,OAAQ,eAAgBva,WAAY,GACtC,CAAEA,WAAY,MAIxB,kBAAC,GAAD,KACGkD,EAAKK,MAER,kBAACiX,GAAD,KACE,kBAACC,GAAD,KAAe,cAEjB,kBAAC,EAAD,MACA,kBAAC,EAAD,CACE3e,KAAK,SACLlB,QAAS,WACTmB,GAAE,iBAAYmH,EAAKG,WA2B3BqX,GAAe9d,YAAH,kLAaZyd,GAAmBtgB,IAAO0C,IAAV,4nBAgBPie,IAWTC,GAAc5gB,IAAO0C,IAAV,qGAOXme,GAAuB7gB,IAAO0C,IAAV,gHAOpBoe,GAAY9gB,IAAO0C,IAAV,gNAEI,SAACxC,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAS5Cud,GAAoB3e,IAAO0C,IAAV,gHAEE,SAACxC,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAIlDiZ,GAAcra,IAAO+gB,GAAV,2HACN,SAAC7gB,GAAD,OAAWA,EAAMI,MAAMC,MAAMI,KAAK,QAGjC,SAACT,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAYrCmf,IARgBvgB,IAAOid,KAAV,+HAIP,SAAC/c,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAIrBpB,IAAO0C,IAAV,oGAMbS,GAAenD,IAAO0C,IAAV,iEACN,SAACxC,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAChC,SAAClB,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAGpCqf,GAAgBzgB,IAAO0C,IAAV,2EACH,SAACxC,GAAD,OAAWA,EAAMI,MAAMc,QAAQ,MAIzCsf,GAAe1gB,IAAO0C,IAAV,6CACP,SAACxC,GAAD,OAAWA,EAAMI,MAAMC,MAAMI,KAAK,QAmB9BqgB,IAhBOhhB,IAAO0C,IAAV,wUAlSS,WAC1B,MAAgB+c,KAAT5H,EAAP,oBAEMoJ,GADc5Y,cAAZC,QACYsX,MAEdsB,EAAYrJ,EAAMsJ,WACtB,kBCtCuB,cDsCvB,EAAGtX,eAGCuX,EACJF,GAAa,GAAKD,EAAYC,GAC1BD,EAAYC,GAAW7O,iBACvB,IAAIjD,KAAU,GAEdiS,EAAkB,IAAIjS,KAAU,QAEhCkS,EAAiB,IAAIlS,KAAU,KAE/BmS,EAAO1J,EAAM2J,QACjB,SAACC,EAAUtY,EAAMnF,GACf,IAAM0d,EAAmB,0CACpBvY,GACA8X,EAAYjd,IAFQ,IAGvB2d,IAAKV,EAAYjd,GACbod,EACGpP,MAAMsP,GACNtP,MAAMqP,GACNrP,MAAMiP,EAAYjd,GAAGsO,YACrB5P,IAAIue,EAAYjd,GAAGoO,gBACtB,OAEAwP,EAAW,aAAOH,GAMxB,OALmD,IAA/CG,EAAYA,EAAY/d,OAAS,GAAGA,OACtC+d,EAAYC,KAAK,CAACH,IAElBE,EAAYA,EAAY/d,OAAS,GAAGge,KAAKH,GAEpCE,IAET,CAAC,KAGH,OACE,kBAAChB,GAAD,KACKW,EAAK,GAAG1d,OACT0d,EAAKzd,KAAI,SAACge,EAAS9d,GAAV,OACP,kBAAC8c,GAAD,CAAW/Z,IAAK/C,GACb8d,EAAQhe,KAAI,SAACqF,EAAM4Y,GAAP,OACX,kBAAC,IAAMC,SAAP,CAAgBjb,IAAKgb,GACnB,kBAAC,GAAD,CAAU5Y,KAAMA,KACR,IAAN4Y,GAAiB,IAANA,IAAY,kBAAC,GAAD,cAMjC,kBAAClB,GAAD,KACE,kBAAC,GAAD,CAAQ9e,KAAK,6BE7BjBkgB,GAAcjiB,IAAO0C,IAAV,+KAUXgc,GAAqB1e,IAAO0C,IAAV,gLAUlBic,GAAoB3e,IAAO0C,IAAV,4IASRqV,GAzES,WACtB,IAAQmK,EAASC,cAATD,KACA5Z,EAAYD,cAAZC,QACR,EAAuCjB,GAAS,kBAAC,GAAD,OAAhD,oBAEA,OACE,kBAAC,IAAD,KACE,kBAAC,GAAD,KACKiB,EACD,oCACE,kBAAC,IAAD,CAAOjD,OAAK,EAAC6c,KAAMA,GACjB,kBAAC,GAAD,CACEha,MAAM,eACNwS,SAAS,4CAEX,kBAACuH,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,UAKR,kBAAC,IAAD,CAAOC,KAAI,UAAKA,EAAL,aACT,kBAAC,GAAD,QAIJ,yBACElc,MAAO,CACLiZ,WAAY,SACZxI,QAAS,OACTyI,KAAM,EACNC,eAAgB,eCff7e,GAhCD,CACZ8hB,aAAc,GACdrf,YAAa,CACXC,OAAQ,KAEVzC,MAAO,CACLsH,MCPiB,ODQjBlH,KCKgB,CAClB0hB,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,WDXHvgB,QAAS,CACPwgB,MCDC,UDEDvgB,KCDC,WDGHwgB,UAAW,CACTxgB,KCVC,aDYH5B,MCjBiB,ODkBjBD,aChBwB,2BDiBxB2B,OCKkB,CACpBkgB,IAAK,UACLE,IAAK,UACLG,IAAK,YDNLhd,UAAW,KACXtE,QAAS,CACP6H,EAAG,EACH6Z,EAAG,EACHC,EAAG,GACH/Z,EAAG,GACHga,EAAG,GACHC,EAAG,GACHC,EAAG,IAEL3L,WAAY,KE0BR4L,GAAsB,SAAC,GAAkB,IAAhBvhB,EAAe,EAAfA,SAC7B,EAA4BkU,KAApBjG,EAAR,EAAQA,QAASkG,EAAjB,EAAiBA,OAEjB,OACE,kBAAC,IAAD,CAAezV,MAAOA,IACpB,kBAAC,IAAD,CACEuP,QAASA,EACTuT,WAAY,CACVC,cAAe,CAAEtN,YAGnB,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAiBnU,SASzB0hB,GAAuB,WAC3B,IAAMC,EAAW3e,uBAAY,WAC3BuU,aAAaM,QAAQ,aAAc,UAClC,IAEH,EAAmCpS,GACjC,kBAAC,GAAD,CAAiB/C,UAAWif,KAD9B,oBAWA,OAPA/a,qBAAU,cAKP,IAEI,+BAGMgb,GA7EO,WACpB,MAAoChf,oBAAS,GAA7C,mBAAOif,EAAP,KAAmBC,EAAnB,KAEMC,EAA0B/e,uBAAY,WAC1C8e,GAAc,KACb,CAACA,IAEEE,EAA0Bhf,uBAAY,WAC1C8e,GAAc,KACb,CAACA,IAEJ,OACE,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CACEhM,oBAAqBkM,EACrBjM,YAAY,IAEd,kBAAC,GAAD,CAAYpT,UAAWof,EAAyBve,QAASqe,IACzD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOpe,OAAK,EAAC6c,KAAK,KAChB,kBAAC,IAAD,CAAUlgB,GAAG,YAEf,kBAAC,IAAD,CAAOkgB,KAAK,UACV,kBAAC,GAAD,SAIN,kBAAC,GAAD,QC7CN2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.09a66700.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-rev.139c2ff7.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.2c2cb827.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask-fox.c06f3a3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-cake.7c9fa1f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-icon.139c2ff7.png\";","import React, { useContext, useMemo } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode,\r\n  disabled?: boolean,\r\n  menuButton?: boolean,\r\n  href?: string,\r\n  onClick?: () => void,\r\n  size?: 'xs' | 'sm' | 'md' | 'lg',\r\n  text?: string,\r\n  to?: string,\r\n  variant?: 'default' | 'secondary' | 'tertiary',\r\n  backgroundColor?: string,\r\n  border?: boolean\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  children,\r\n  disabled,\r\n  menuButton = false,\r\n  href,\r\n  onClick,\r\n  size,\r\n  text,\r\n  to,\r\n  variant,\r\n  backgroundColor,\r\n  border= false\r\n}) => {\r\n  const { color, spacing } = useContext(ThemeContext)\r\n\r\n  let buttonColor: string\r\n  let background: string\r\n  switch (variant) {\r\n    case 'tertiary':\r\n        buttonColor = color.purple[100]\r\n      break\r\n    case 'secondary':\r\n      buttonColor = color.white\r\n      break\r\n    case 'default':\r\n    default:\r\n      buttonColor = color.primary.main\r\n  }\r\n\r\n  let boxShadow: string\r\n  let buttonSize: number\r\n  let buttonPadding: number\r\n  let fontSize: number\r\n  let minHeight: number = 45\r\n  switch (size) {\r\n    case 'xs':\r\n      minHeight = 36\r\n    case 'sm':\r\n      boxShadow = `4px 4px 8px ${color.grey[300]},\r\n        -8px -8px 16px ${color.grey[100]}FF;`\r\n      buttonPadding = spacing[3]\r\n      buttonSize = 36\r\n      fontSize = 14\r\n      break\r\n    case 'lg':\r\n      boxShadow = `6px 6px 12px ${color.grey[300]},\r\n        -12px -12px 24px ${color.grey[100]}ff;`\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 72\r\n      fontSize = 16\r\n      break\r\n    case 'md':\r\n    default:\r\n      boxShadow = `6px 6px 12px ${color.grey[300]},\r\n        -12px -12px 24px -2px ${color.grey[100]}ff;`\r\n\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 45\r\n      fontSize = 16\r\n  }\r\n\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>\r\n    } else if (href) {\r\n      return <StyledExternalLink href={href} target=\"__blank\">{text}</StyledExternalLink>\r\n    } else {\r\n      return text\r\n    }\r\n  }, [href, text, to])\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      menuButton={menuButton}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n      backgroundColor={backgroundColor}\r\n      border={border}\r\n      variant={variant}\r\n      minHeight={minHeight}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string,\r\n  color: string,\r\n  disabled?: boolean,\r\n  menuButton?: boolean\r\n  fontSize: number,\r\n  padding: number,\r\n  size: number,\r\n  backgroundColor: string,\r\n  border: boolean,\r\n  variant: string,\r\n  minHeight: number\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;  \r\n  background: ${props => props.backgroundColor || \r\n        (!props.disabled && props.menuButton ? props.theme.color.whiteOpacity : \r\n        (!props.disabled ? props.color : props.theme.color.white)\r\n    )};\r\n  min-height: ${props => props.minHeight}px;\r\n  border: ${props => (props.disabled && `1px solid ${props.theme.color.grey[100]}`) || props.border ? `1px solid ${props.theme.color.grey[400]}` : '0'};\r\n  border-radius: 4px;\r\n  text-transform: capitalize;\r\n  color: ${props => (props.disabled && `${props.theme.color.grey[300]}`) \r\n    || (props.variant === 'secondary' && props.theme.color.grey[700] \r\n    || (props.variant === 'tertiary' || props.backgroundColor || props.menuButton) && `${props.theme.color.white}`)\r\n  };\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${props => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${props => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${props => props.padding}px;\r\n  padding-right: ${props => props.padding}px;\r\n  pointer-events: ${props => !props.disabled ? undefined : 'none'};\r\n  width: 100%;\r\n  &:hover {\r\n    background-color: ${props => props.backgroundColor ? `${props.backgroundColor}aa` : \r\n        (props.variant === 'secondary' ? props.theme.color.grey[200] : (props.color && `${props.color}99` || props.theme.color.grey[400]))\r\n    };\r\n    color: ${props => props.color && ((props.menuButton || props.backgroundColor || props.variant === 'tertiary') ? props.theme.color.white : props.theme.color.grey[800])}\r\n  }\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${props => -props.theme.spacing[4]}px;\r\n  padding: 0 ${props => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${props => -props.theme.spacing[4]}px;\r\n  padding: 0 ${props => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface CardIconProps {\r\n  children?: React.ReactNode,\r\n}\r\n\r\nconst CardIcon: React.FC<CardIconProps> = ({ children }) => (\r\n  <StyledCardIcon>\r\n    {children}\r\n  </StyledCardIcon>\r\n)\r\n\r\nconst StyledCardIcon = styled.div`\r\n  background-color: ${props => props.theme.color.white};\r\n  font-size: 36px;\r\n  height: 80px;\r\n  width: 100%;\r\n  border-radius: 0px;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0 auto ${props => props.theme.spacing[3]}px;\r\n`\r\n\r\nexport default CardIcon\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nexport interface ModalProps {\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst Modal: React.FC = ({ children }) => {\r\n  return (\r\n    <StyledResponsiveWrapper>\r\n      <StyledModal>{children}</StyledModal>\r\n    </StyledResponsiveWrapper>\r\n  )\r\n}\r\n\r\nconst mobileKeyframes = keyframes`\r\n  0% {\r\n    transform: translateY(0%);\r\n  }\r\n  100% {\r\n    transform: translateY(-100%);\r\n  }\r\n`\r\n\r\nconst StyledResponsiveWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 512px;\r\n  @media (max-width: ${(props) => props.theme.breakpoints.mobile}px) {\r\n    flex: 1;\r\n    position: absolute;\r\n    top: 100%;\r\n    right: 0;\r\n    left: 0;\r\n    max-height: calc(100% - ${(props) => props.theme.spacing[4]}px);\r\n    animation: ${mobileKeyframes} 0.3s forwards ease-out;\r\n  }\r\n`\r\n\r\nconst StyledModal = styled.div`\r\n  padding: 0 20px;\r\n  background: ${(props) => props.theme.color.white};\r\n  border: 1px solid ${(props) => props.theme.color.grey[300]}ff;\r\n  border-radius: 12px;\r\n  box-shadow: inset 1px 1px 0px ${(props) => props.theme.color.grey[100]};\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 0;\r\n`\r\n\r\nconst StyledModalContent = styled.div``\r\n\r\nexport default Modal\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n  \r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n  \r\n  return (\r\n    <StyledSpacer size={s} />\r\n  )\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number,\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${props => props.size}px;\r\n  width: ${props => props.size}px;\r\n`\r\n\r\nexport default Spacer","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>\r\n            {child}\r\n          </StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: right;\r\n  justify-content: flex-end;\r\n  background-color: ${props => props.theme.color.grey[100]}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${props => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ModalContent: React.FC = ({ children }) => {\r\n  return (\r\n    <StyledModalContent>{children}</StyledModalContent> \r\n  )\r\n}\r\n\r\nconst StyledModalContent = styled.div`\r\n  padding: ${props => props.theme.spacing[4]}px;\r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}px) {\r\n    flex: 1;\r\n    overflow: auto;\r\n  }\r\n`\r\n\r\nexport default ModalContent","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface ModalTitleProps {\r\n  text?: string\r\n}\r\n\r\nconst ModalTitle: React.FC<ModalTitleProps> = ({ text }) => (\r\n  <StyledModalTitle>\r\n    {text}\r\n  </StyledModalTitle>\r\n)\r\n\r\nconst StyledModalTitle = styled.div`\r\n  align-items: center;\r\n  color: ${props => props.theme.color.grey[800]};\r\n  display: flex;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  height: 80px;\r\n  justify-content: center;\r\n`\r\n\r\nexport default ModalTitle\r\n","import React, { useCallback, useState, useMemo } from 'react'\r\n\r\nimport Button from '../Button'\r\nimport CardIcon from '../CardIcon'\r\nimport Modal, { ModalProps } from '..//Modal'\r\nimport ModalActions from '..//ModalActions'\r\nimport ModalContent from '../ModalContent'\r\nimport ModalTitle from '../ModalTitle'\r\n\r\ninterface DisclaimerModal extends ModalProps {\r\n  onConfirm: () => void\r\n}\r\n\r\nconst DisclaimerModal: React.FC<DisclaimerModal> = ({ onConfirm, onDismiss }) => {\r\n\r\n  const [step, setStep] = useState('disclaimer')\r\n\r\n  const handleConfirm = useCallback(() => {\r\n    onConfirm()\r\n    onDismiss()\r\n  }, [onConfirm, onDismiss])\r\n\r\n  const modalContent = useMemo(() => {\r\n    if (step === 'disclaimer') {\r\n      return (\r\n        <div>\r\n          <p>Audits: None.</p>\r\n          <p>While the initial creators of the Yam protocol have made reasonable efforts to attempt to ensure the security of the contracts, including forking much of the codebase from existing well-audited projects and soliciting review from friends, nothing approaching the rigor of a formal audit has been conducted at this time.</p>\r\n          <p>We STRONGLY urge caution to anyone who chooses to engage with these contracts.</p>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <p>Attention YAM Uniswap LPs</p>\r\n          <p>The only Uniswap pool that is compatible with YAM is YAM/yCRV (Curve yPool tokens)</p>\r\n          <p>Providing liquidity for other Uniswap pools is dangerous</p>\r\n          <p>You will LOSE your share of rebases</p>\r\n        </div>\r\n      )\r\n    }\r\n  }, [step])\r\n\r\n  const button = useMemo(() => {\r\n    if (step === 'disclaimer') {\r\n      return (\r\n        <Button text=\"Next\" variant=\"secondary\" onClick={() => setStep('uniswap')} />\r\n      )\r\n    } else {\r\n      return (\r\n        <Button text=\"I understand\" onClick={handleConfirm} />\r\n      )\r\n    }\r\n  }, [setStep, step, handleConfirm])\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Warning`} />\r\n      <CardIcon>⚠️</CardIcon>\r\n      <ModalContent>\r\n        {modalContent}\r\n      </ModalContent>\r\n      <ModalActions>\r\n        {button}\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\n\r\nexport default DisclaimerModal","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\n\r\ninterface MobileMenuProps {\r\n  onDismiss: () => void,\r\n  visible?: boolean\r\n}\r\n\r\nconst MobileMenu: React.FC<MobileMenuProps> = ({ onDismiss, visible }) => {\r\n  if (visible) {\r\n    return (\r\n      <StyledMobileMenuWrapper>\r\n        <StyledBackdrop onClick={onDismiss} />\r\n        <StyledMobileMenu>\r\n          <StyledLink exact activeClassName=\"active\" to=\"/\" onClick={onDismiss}>Home</StyledLink>\r\n          <StyledLink exact activeClassName=\"active\" to=\"/farms\" onClick={onDismiss}>Farms</StyledLink>\r\n          <StyledLink exact activeClassName=\"active\" to=\"/faq\" onClick={onDismiss}>FAQ</StyledLink>\r\n        </StyledMobileMenu>\r\n      </StyledMobileMenuWrapper>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nconst StyledBackdrop = styled.div`\r\n  background-color: ${props => props.theme.color.grey[600]}aa;\r\n  position: absolute;\r\n  top: 0; right: 0; bottom: 0; left: 0;\r\n`\r\n\r\nconst StyledMobileMenuWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  top: 0; right: 0; bottom: 0; left: 0;\r\n  z-index: 1000;\r\n`\r\n\r\nconst slideIn = keyframes`\r\n  0% {\r\n    transform: translateX(0)\r\n  }\r\n  100% {\r\n    transform: translateX(-100%);\r\n  }\r\n`\r\n\r\nconst StyledMobileMenu = styled.div`\r\n  animation: ${slideIn} 0.3s forwards ease-out;\r\n  background-color: ${props => props.theme.color.grey[200]};\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  position: absolute;\r\n  top: 0; left: 100%; bottom: 0;\r\n  width: calc(100% - 48px);\r\n`\r\n\r\nconst StyledLink = styled(NavLink)`\r\n  box-sizing: border-box;\r\n  color: ${props => props.theme.color.grey[400]};\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  padding: ${props => props.theme.spacing[3]}px ${props => props.theme.spacing[4]}px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n  &:hover {\r\n    color: ${props => props.theme.color.grey[500]};\r\n  }\r\n  &.active {\r\n    color: ${props => props.theme.color.primary.main};\r\n  }\r\n`\r\n\r\nexport default MobileMenu","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface ContainerProps {\r\n  children?: React.ReactNode,\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Container: React.FC<ContainerProps> = ({ children, size = 'md' }) => {\r\n  const { siteWidth } = useContext<{ siteWidth: number }>(ThemeContext)\r\n  let width: number\r\n  switch (size) {\r\n    case 'sm':\r\n      width = siteWidth / 2\r\n      break\r\n    case 'md':\r\n      width = siteWidth * 2 / 3\r\n      break\r\n    case 'lg':\r\n    default:\r\n      width = siteWidth\r\n  }\r\n  return (\r\n    <StyledContainer width={width}>\r\n      {children}\r\n    </StyledContainer>\r\n  )\r\n}\r\n\r\ninterface StyledContainerProps {\r\n  width: number\r\n}\r\n\r\nconst StyledContainer = styled.div<StyledContainerProps>`\r\n  box-sizing: border-box;\r\n  margin: 0 auto;\r\n  max-width: ${props => props.width}px;\r\n  padding: 0 ${props => props.theme.spacing[4]}px;\r\n  width: 100%;\r\n`\r\n\r\nexport default Container","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport logo from '../../assets/img/logo.png'\r\n\r\nconst Logo: React.FC = () => {\r\n  return (\r\n    <StyledLogo to=\"/\">\r\n      <img src={logo} height=\"120\" style={{ marginTop: -4 }} />\r\n    </StyledLogo>\r\n  )\r\n}\r\n\r\nconst StyledLogo = styled(Link)`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0;\r\n  min-height: 60px;\r\n  min-width: 44px;\r\n  padding: 0;\r\n  text-decoration: none;\r\n  font-size: 1.1em;\r\n  color: #fff;\r\n  font-weight: 100;\r\n\r\n  img {\r\n    margin-right: 12px;\r\n  }\r\n  span {\r\n    margin-right: 8px;\r\n    font-weight: 500;\r\n    @media screen and (max-width:768px) {\r\n      display:none !important;\r\n    }\r\n  }\r\n`\r\n\r\nexport default Logo\r\n","import React, { createContext, useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface ModalsContext {\r\n  content?: React.ReactNode,\r\n  isOpen?: boolean,\r\n  onPresent: (content: React.ReactNode, key?: string) => void,\r\n  onDismiss: () => void\r\n}\r\n\r\nexport const Context = createContext<ModalsContext>({\r\n  onPresent: () => {},\r\n  onDismiss: () => {},\r\n})\r\n\r\nconst Modals: React.FC = ({ children }) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [content, setContent] = useState<React.ReactNode>()\r\n  const [modalKey, setModalKey] = useState<string>()\r\n\r\n  const handlePresent = useCallback((modalContent: React.ReactNode, key?: string) => {\r\n    setModalKey(key)\r\n    setContent(modalContent)\r\n    setIsOpen(true)\r\n  }, [setContent, setIsOpen, setModalKey])\r\n\r\n  const handleDismiss = useCallback(() => {\r\n    setContent(undefined)\r\n    setIsOpen(false)\r\n  }, [setContent, setIsOpen, modalKey])\r\n\r\n  return (\r\n    <Context.Provider value={{\r\n      content,\r\n      isOpen,\r\n      onPresent: handlePresent,\r\n      onDismiss: handleDismiss,\r\n    }}>\r\n      {children}\r\n      {isOpen && (\r\n        <StyledModalWrapper>\r\n          <StyledModalBackdrop onClick={handleDismiss} />\r\n          {React.isValidElement(content) && React.cloneElement(content, {\r\n            onDismiss: handleDismiss,\r\n          })}\r\n        </StyledModalWrapper>\r\n      )}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nconst StyledModalWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0; right: 0; bottom: 0; left: 0;\r\n`\r\n\r\nconst StyledModalBackdrop = styled.div`\r\n  background: rgba(0,0,0,.32);\r\n  position: absolute;\r\n  top: 0; right: 0; bottom: 0; left: 0;\r\n`\r\n\r\nexport default Modals\r\n","import { useCallback, useContext } from 'react'\r\n\r\nimport { Context } from '../contexts/Modals'\r\n\r\nconst useModal = (modal: React.ReactNode, key?: string) => {\r\n  const { onDismiss, onPresent } = useContext(Context)\r\n\r\n  const handlePresent = useCallback(() => {\r\n    onPresent(modal, key)\r\n  }, [\r\n    key,\r\n    modal,\r\n    onPresent,\r\n  ])\r\n\r\n  return [handlePresent, onDismiss]\r\n}\r\n\r\nexport default useModal","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface CardProps {\r\n  children?: React.ReactNode,\r\n  flat?: boolean\r\n}\r\n\r\nconst Card: React.FC<CardProps> = ({\r\n  children,\r\n  flat\r\n}) => (\r\n\r\n  <StyledCard flat={flat}>\r\n    {children}\r\n  </StyledCard>\r\n)\r\n\r\ninterface StyledCardProps {\r\n  flat: boolean\r\n}\r\n\r\nconst StyledCard = styled.div<StyledCardProps>`\r\n  background: ${props => props.theme.color.white};\r\n  border: 1px solid ${props => props.flat ? '#eee' : props.theme.color.grey[100] + 'ff'};\r\n  border-radius: 6px;\r\n  ${props => props.flat ? '' : 'box-shadow: 0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12);'}\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n`\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst CardContent: React.FC = ({ children }) => (\r\n  <StyledCardContent>{children}</StyledCardContent>\r\n)\r\n\r\nconst StyledCardContent = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  padding: ${(props) => `${props.theme.spacing[3]}px ${props.theme.spacing[5]}px`} ;\r\n`\r\n\r\nexport default CardContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface CardTitleProps {\r\n  text?: string\r\n}\r\n\r\nconst CardTitle: React.FC<CardTitleProps> = ({ text }) => (\r\n  <StyledCardTitle>{text}</StyledCardTitle>\r\n)\r\n\r\nconst StyledCardTitle = styled.div`\r\n  color: ${props => props.theme.color.black};\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  padding: ${props => props.theme.spacing[4]}px;\r\n  text-align: center;\r\n`\r\n\r\nexport default CardTitle\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Button from '../../Button'\r\nimport Card from '../../Card'\r\nimport CardContent from '../../CardContent'\r\nimport CardIcon from '../../CardIcon'\r\nimport CardTitle from '../../CardTitle'\r\nimport Spacer from '../../Spacer'\r\n\r\ninterface WalletCardProps {\r\n  icon: React.ReactNode,\r\n  onConnect: () => void,\r\n  title: string\r\n}\r\n\r\nconst WalletCard: React.FC<WalletCardProps> = ({ icon, onConnect, title }) => (\r\n  <Card flat>\r\n    <CardContent>\r\n      <CardIcon>\r\n        {icon}\r\n      </CardIcon>\r\n      <CardTitle text={title} />\r\n      <Spacer />\r\n      <Button\r\n          variant={'secondary'}\r\n          border\r\n          onClick={onConnect}\r\n          text=\"Connect\"\r\n      />\r\n    </CardContent>\r\n  </Card>\r\n)\r\n\r\nexport default WalletCard\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from 'use-wallet'\r\n\r\nimport metamaskLogo from '../../assets/img/metamask-fox.svg'\r\n\r\nimport Button from '../Button'\r\nimport Modal, { ModalProps } from '../Modal'\r\nimport ModalActions from '../ModalActions'\r\nimport ModalContent from '../ModalContent'\r\nimport ModalTitle from '../ModalTitle'\r\n\r\nimport WalletCard from './components/WalletCard'\r\n\r\nconst WalletProviderModal: React.FC<ModalProps> = ({ onDismiss }) => {\r\n  const { account, connect } = useWallet()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      onDismiss()\r\n    }\r\n  }, [account, onDismiss])\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text=\"Select a wallet provider.\" />\r\n\r\n      <ModalContent>\r\n        <StyledWalletsWrapper>\r\n            <WalletCard\r\n              icon={<img src={metamaskLogo} style={{ height: 32 }} />}\r\n              onConnect={() => connect('injected')}\r\n              title=\"Metamask\"\r\n            />\r\n        </StyledWalletsWrapper>\r\n      </ModalContent>\r\n\r\n      <ModalActions>\r\n        <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst StyledWalletsWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  @media (max-width: ${(props) => props.theme.breakpoints.mobile}px) {\r\n    flex-direction: column;\r\n    flex-wrap: none;\r\n  }\r\n`\r\n\r\nconst StyledWalletCard = styled.div`\r\n  flex-basis: calc(50% - ${(props) => props.theme.spacing[2]}px);\r\n`\r\n\r\nexport default WalletProviderModal\r\n","export const ConfirmationType = {\r\n  Hash: 0,\r\n  Confirmed: 1,\r\n  Both: 2,\r\n  Simulate: 3,\r\n}\r\n","// 42 - Testnet\r\n// 4 - Rinkeby\r\n// 1 - Mainnet\r\n\r\n/*\r\n1 Mainnet\r\n3 Ropsten\r\n4 Rinkeby\r\n5 Goerli\r\n42 Kovan\r\n56 Binance Smart Chain Mainnet\r\n97 Binance Smart Chain Testnet\r\n100 xDai\r\n137 Matic\r\n1287 Moonbase Testnet\r\n80001 Matic Testnet\r\n43113 Avalanche Testnet\r\n43114 Avalanche Mainnet\r\n*/\r\n\r\nexport const contractAddresses = {\r\n  erc20: {\r\n    97: '0x2B970c9d1e87b0b18A4911068A84213568696A18',\r\n    56: '0x2B970c9d1e87b0b18A4911068A84213568696A18',\r\n    42: '0x9C821fF00DBb2D3D2C908f39bB497766eac2d8c6',\r\n    4: '0x7D08Dc5285A06c21aC5f4742C31B9D097607aaBc',\r\n    1: '0x3db6ba6ab6f95efed1a6e794cad492faaabf294d',\r\n  },\r\n  erc20v2: {\r\n    97: '0x4B74e109E8b0d03226224Ef2746F8C13e4c59cD4',\r\n    56: '0x4B74e109E8b0d03226224Ef2746F8C13e4c59cD4',\r\n    42: '0xbFd181cb0c8E23b65805Dded3863Dce6517402A7',\r\n    4: '0xc6fDe3FD2Cc2b173aEC24cc3f267cb3Cd78a26B7',\r\n    1: '0xd01409314acb3b245cea9500ece3f6fd4d70ea30',\r\n  },\r\n  farm: {\r\n    97: '0x4a48fA5Ab9468e37bAcba3d379c3129baF5aBe8A',\r\n    56: '0x4a48fA5Ab9468e37bAcba3d379c3129baF5aBe8A',\r\n    42: '0xbFd181cb0c8E23b65805Dded3863Dce6517402A7',\r\n    4: '0x0030A8A46AEA824eCA127F36d449D654cC8AC8A6',\r\n    1: '0xbfd181cb0c8e23b65805dded3863dce6517402a7',\r\n  },\r\n  weth: {\r\n    97: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    42: '0xf3a6679b266899042276804930b3bfbaf807f15b',\r\n    4: '0x2fcc4dba284dcf665091718e4d0dab53a416dfe7',\r\n    1: '0x9cd7403ac4856071581e1f5a298317d9a72a19cf',\r\n  },\r\n}\r\n\r\nexport const supportedPools = [\r\n  {\r\n    id: 'BCT',\r\n    version: 'V1',\r\n    name: 'BCT BEP-20',\r\n    pid: 0,\r\n    lpAddresses: {\r\n      97: '0x2B970c9d1e87b0b18A4911068A84213568696A18',\r\n      56: '0x2B970c9d1e87b0b18A4911068A84213568696A18',\r\n      42: '0x74414F027FDCda5DaacFa4d35F29C0d6c5020776',\r\n      4: '0x7D721dDB45C1eaCceD8Dc4a3698a21b93eb7f9c3',\r\n      1: '0x9cd7403ac4856071581e1f5a298317d9a72a19cf',\r\n    },\r\n    tokenAddresses: { ...contractAddresses.erc20 },\r\n    symbol: 'BCT',\r\n    tokenSymbol: 'BCT',\r\n    icon: '',\r\n    pool: '100%',\r\n  }\r\n]\r\n","import BigNumber from 'bignumber.js/bignumber'\r\n// import Web3 from 'web3'\r\nimport * as Types from './types.js'\r\nimport {\r\n  // SUBTRACT_GAS_LIMIT,\r\n  contractAddresses,\r\n  supportedPools,\r\n} from './constants.js'\r\n\r\nimport UNIV2PairAbi from './abi/uni_v2_lp.json'\r\n\r\nimport FarmAbi from './abi/farm.json'\r\nimport ERC20Abi from './abi/erc20.json'\r\nimport ERC20V2Abi from './abi/erc20v2.json'\r\nimport WETHAbi from './abi/weth.json'\r\n\r\nexport class Contracts {\r\n  constructor(provider, networkId, web3, options) {\r\n    this.web3 = web3\r\n    this.defaultConfirmations = options.defaultConfirmations\r\n    this.autoGasMultiplier = options.autoGasMultiplier || 1.5\r\n    this.confirmationType =\r\n      options.confirmationType || Types.ConfirmationType.Confirmed\r\n    this.defaultGas = options.defaultGas\r\n    this.defaultGasPrice = options.defaultGasPrice\r\n\r\n    this.erc20 = new this.web3.eth.Contract(ERC20Abi)\r\n    this.erc20v2 = new this.web3.eth.Contract(ERC20V2Abi)\r\n    this.farm = new this.web3.eth.Contract(FarmAbi)\r\n    this.weth = new this.web3.eth.Contract(WETHAbi)\r\n\r\n    this.pools = supportedPools.map((pool) =>\r\n      Object.assign(pool, {\r\n        lpAddress: pool.lpAddresses[networkId],\r\n        tokenAddress: pool.tokenAddresses[networkId],\r\n        lpContract: new this.web3.eth.Contract(UNIV2PairAbi),\r\n        tokenContract:\r\n          pool.version === 'V1'\r\n            ? new this.web3.eth.Contract(ERC20Abi)\r\n            : new this.web3.eth.Contract(ERC20V2Abi),\r\n      }),\r\n    )\r\n\r\n    this.setProvider(provider, networkId)\r\n    this.setDefaultAccount(this.web3.eth.defaultAccount)\r\n  }\r\n\r\n  setProvider(provider, networkId) {\r\n    const setProvider = (contract, address) => {\r\n      contract.setProvider(provider)\r\n      if (address) contract.options.address = address\r\n      else console.error('Contract address not found in network', networkId)\r\n    }\r\n\r\n    setProvider(this.erc20, contractAddresses.erc20[networkId])\r\n    setProvider(this.erc20v2, contractAddresses.erc20v2[networkId])\r\n    setProvider(this.farm, contractAddresses.farm[networkId])\r\n    setProvider(this.weth, contractAddresses.weth[networkId])\r\n\r\n    this.pools.forEach(\r\n      ({ lpContract, lpAddress, tokenContract, tokenAddress }) => {\r\n        setProvider(lpContract, lpAddress)\r\n        setProvider(tokenContract, tokenAddress)\r\n      },\r\n    )\r\n  }\r\n\r\n  setDefaultAccount(account) {\r\n    this.erc20.options.from = account\r\n    this.erc20v2.options.from = account\r\n    this.farm.options.from = account\r\n  }\r\n\r\n  // async callContractFunction(method, options) {\r\n  //   const {\r\n  //     confirmations,\r\n  //     confirmationType,\r\n  //     autoGasMultiplier,\r\n  //     ...txOptions\r\n  //   } = options\r\n  //\r\n  //   if (!this.blockGasLimit) {\r\n  //     await this.setGasLimit()\r\n  //   }\r\n  //\r\n  //   if (!txOptions.gasPrice && this.defaultGasPrice) {\r\n  //     txOptions.gasPrice = this.defaultGasPrice\r\n  //   }\r\n  //\r\n  //   if (confirmationType === Types.ConfirmationType.Simulate || !options.gas) {\r\n  //     let gasEstimate\r\n  //     if (\r\n  //       this.defaultGas &&\r\n  //       confirmationType !== Types.ConfirmationType.Simulate\r\n  //     ) {\r\n  //       txOptions.gas = this.defaultGas\r\n  //     } else {\r\n  //       try {\r\n  //         console.log('estimating gas')\r\n  //         gasEstimate = await method.estimateGas(txOptions)\r\n  //       } catch (error) {\r\n  //         const data = method.encodeABI()\r\n  //         const { from, value } = options\r\n  //         const to = method._parent._address\r\n  //         error.transactionData = { from, value, data, to }\r\n  //         throw error\r\n  //       }\r\n  //\r\n  //       const multiplier = autoGasMultiplier || this.autoGasMultiplier\r\n  //       const totalGas = Math.floor(gasEstimate * multiplier)\r\n  //       txOptions.gas =\r\n  //         totalGas < this.blockGasLimit ? totalGas : this.blockGasLimit\r\n  //     }\r\n  //\r\n  //     if (confirmationType === Types.ConfirmationType.Simulate) {\r\n  //       let g = txOptions.gas\r\n  //       return { gasEstimate, g }\r\n  //     }\r\n  //   }\r\n  //\r\n  //   if (txOptions.value) {\r\n  //     txOptions.value = new BigNumber(txOptions.value).toFixed(0)\r\n  //   } else {\r\n  //     txOptions.value = '0'\r\n  //   }\r\n  //\r\n  //   const promi = method.send(txOptions)\r\n  //\r\n  //   const OUTCOMES = {\r\n  //     INITIAL: 0,\r\n  //     RESOLVED: 1,\r\n  //     REJECTED: 2,\r\n  //   }\r\n  //\r\n  //   let hashOutcome = OUTCOMES.INITIAL\r\n  //   let confirmationOutcome = OUTCOMES.INITIAL\r\n  //\r\n  //   const t =\r\n  //     confirmationType !== undefined ? confirmationType : this.confirmationType\r\n  //\r\n  //   if (!Object.values(Types.ConfirmationType).includes(t)) {\r\n  //     throw new Error(`Invalid confirmation type: ${t}`)\r\n  //   }\r\n  //\r\n  //   let hashPromise\r\n  //   let confirmationPromise\r\n  //\r\n  //   if (\r\n  //     t === Types.ConfirmationType.Hash ||\r\n  //     t === Types.ConfirmationType.Both\r\n  //   ) {\r\n  //     hashPromise = new Promise((resolve, reject) => {\r\n  //       promi.on('error', (error) => {\r\n  //         if (hashOutcome === OUTCOMES.INITIAL) {\r\n  //           hashOutcome = OUTCOMES.REJECTED\r\n  //           reject(error)\r\n  //           const anyPromi = promi\r\n  //           anyPromi.off()\r\n  //         }\r\n  //       })\r\n  //\r\n  //       promi.on('transactionHash', (txHash) => {\r\n  //         if (hashOutcome === OUTCOMES.INITIAL) {\r\n  //           hashOutcome = OUTCOMES.RESOLVED\r\n  //           resolve(txHash)\r\n  //           if (t !== Types.ConfirmationType.Both) {\r\n  //             const anyPromi = promi\r\n  //             anyPromi.off()\r\n  //           }\r\n  //         }\r\n  //       })\r\n  //     })\r\n  //   }\r\n  //\r\n  //   if (\r\n  //     t === Types.ConfirmationType.Confirmed ||\r\n  //     t === Types.ConfirmationType.Both\r\n  //   ) {\r\n  //     confirmationPromise = new Promise((resolve, reject) => {\r\n  //       promi.on('error', (error) => {\r\n  //         if (\r\n  //           (t === Types.ConfirmationType.Confirmed ||\r\n  //             hashOutcome === OUTCOMES.RESOLVED) &&\r\n  //           confirmationOutcome === OUTCOMES.INITIAL\r\n  //         ) {\r\n  //           confirmationOutcome = OUTCOMES.REJECTED\r\n  //           reject(error)\r\n  //           const anyPromi = promi\r\n  //           anyPromi.off()\r\n  //         }\r\n  //       })\r\n  //\r\n  //       const desiredConf = confirmations || this.defaultConfirmations\r\n  //       if (desiredConf) {\r\n  //         promi.on('confirmation', (confNumber, receipt) => {\r\n  //           if (confNumber >= desiredConf) {\r\n  //             if (confirmationOutcome === OUTCOMES.INITIAL) {\r\n  //               confirmationOutcome = OUTCOMES.RESOLVED\r\n  //               resolve(receipt)\r\n  //               const anyPromi = promi\r\n  //               anyPromi.off()\r\n  //             }\r\n  //           }\r\n  //         })\r\n  //       } else {\r\n  //         promi.on('receipt', (receipt) => {\r\n  //           confirmationOutcome = OUTCOMES.RESOLVED\r\n  //           resolve(receipt)\r\n  //           const anyPromi = promi\r\n  //           anyPromi.off()\r\n  //         })\r\n  //       }\r\n  //     })\r\n  //   }\r\n  //\r\n  //   if (t === Types.ConfirmationType.Hash) {\r\n  //     const transactionHash = await hashPromise\r\n  //     if (this.notifier) {\r\n  //       this.notifier.hash(transactionHash)\r\n  //     }\r\n  //     return { transactionHash }\r\n  //   }\r\n  //\r\n  //   if (t === Types.ConfirmationType.Confirmed) {\r\n  //     return confirmationPromise\r\n  //   }\r\n  //\r\n  //   const transactionHash = await hashPromise\r\n  //   if (this.notifier) {\r\n  //     this.notifier.hash(transactionHash)\r\n  //   }\r\n  //   return {\r\n  //     transactionHash,\r\n  //     confirmation: confirmationPromise,\r\n  //   }\r\n  // }\r\n\r\n  // async callConstantContractFunction(method, options) {\r\n  //   const m2 = method\r\n  //   const { blockNumber, ...txOptions } = options\r\n  //   return m2.call(txOptions, blockNumber)\r\n  // }\r\n\r\n  // async setGasLimit() {\r\n  //   const block = await this.web3.eth.getBlock('latest')\r\n  //   this.blockGasLimit = block.gasLimit - SUBTRACT_GAS_LIMIT\r\n  // }\r\n}\r\n","/*\r\n\r\n    Copyright 2019 dYdX Trading Inc.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n*/\r\n\r\n\r\nconst REQUIRE_MSG = 'Returned error: VM Exception while processing transaction: revert';\r\nconst ASSERT_MSG = 'Returned error: VM Exception while processing transaction: invalid opcode';\r\n\r\nexport class EVM {\r\n  constructor(\r\n    provider,\r\n  ) {\r\n    this.provider = provider;\r\n  }\r\n\r\n  setProvider(\r\n    provider,\r\n  ){\r\n    this.provider = provider;\r\n  }\r\n\r\n  /**\r\n   * Attempts to reset the EVM to its initial state. Useful for testing suites\r\n   *\r\n   * @param provider a valid web3 provider\r\n   * @returns null\r\n   */\r\n   async resetEVM(resetSnapshotId = '0x1') {\r\n    const id = await this.snapshot();\r\n\r\n    if (id !== resetSnapshotId) {\r\n      await this.reset(resetSnapshotId);\r\n    }\r\n  }\r\n\r\n   async reset(id) {\r\n    if (!id) {\r\n      throw new Error('id must be set');\r\n    }\r\n\r\n    await this.callJsonrpcMethod('evm_revert', [id]);\r\n\r\n    return this.snapshot();\r\n  }\r\n\r\n   async snapshot() {\r\n    return this.callJsonrpcMethod('evm_snapshot');\r\n  }\r\n\r\n   async evmRevert(id) {\r\n    return this.callJsonrpcMethod('evm_revert', [id]);\r\n  }\r\n\r\n   async stopMining() {\r\n    return this.callJsonrpcMethod('miner_stop');\r\n  }\r\n\r\n   async startMining() {\r\n    return this.callJsonrpcMethod('miner_start');\r\n  }\r\n\r\n   async mineBlock() {\r\n    return this.callJsonrpcMethod('evm_mine');\r\n  }\r\n\r\n   async increaseTime(duration) {\r\n    return this.callJsonrpcMethod('evm_increaseTime', [duration]);\r\n  }\r\n\r\n   async callJsonrpcMethod(method, params) {\r\n    const args= {\r\n      method,\r\n      params,\r\n      jsonrpc: '2.0',\r\n      id: new Date().getTime(),\r\n    };\r\n\r\n    const response = await this.send(args);\r\n\r\n    return response.result;\r\n  }\r\n\r\n   async send(args) {\r\n    return new Promise((resolve, reject) => {\r\n      const callback = (error, val)=> {\r\n        if (error) {\r\n          reject(error);\r\n        } else {\r\n          resolve(val);\r\n        }\r\n      };\r\n\r\n      this.provider.send(\r\n        args,\r\n        callback,\r\n      );\r\n    });\r\n  }\r\n\r\n  // Helper function\r\n  assertCertainError(error, expected_error_msg) {\r\n    // This complication is so that the actual error will appear in truffle test output\r\n    const message = error.message;\r\n    const matchedIndex = message.search(expected_error_msg);\r\n    let matchedString = message;\r\n    if (matchedIndex === 0) {\r\n      matchedString = message.substring(matchedIndex, matchedIndex + expected_error_msg.length);\r\n    }\r\n    expect(matchedString).toEqual(expected_error_msg);\r\n  }\r\n\r\n  // For solidity function calls that violate require()\r\n  async expectThrow(promise, reason) {\r\n    try {\r\n      await promise;\r\n      throw new Error('Did not throw');\r\n    } catch (e) {\r\n      this.assertCertainError(e, REQUIRE_MSG);\r\n      if (reason && process.env.COVERAGE !== 'true') {\r\n        this.assertCertainError(e, `${REQUIRE_MSG} ${reason}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  // For solidity function calls that violate assert()\r\n  async expectAssertFailure(promise) {\r\n    try {\r\n      await promise;\r\n      throw new Error('Did not throw');\r\n    } catch (e) {\r\n      this.assertCertainError(e, ASSERT_MSG);\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import Web3 from 'web3'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Contracts } from './lib/contracts.js'\r\nimport { EVM } from './lib/evm.js'\r\n\r\nimport { contractAddresses } from './lib/constants'\r\n\r\nexport class Farm {\r\n  constructor(provider, networkId, testing, options) {\r\n    var realProvider\r\n\r\n    if (typeof provider === 'string') {\r\n      if (provider.includes('wss')) {\r\n        realProvider = new Web3.providers.WebsocketProvider(\r\n          provider,\r\n          options.ethereumNodeTimeout || 10000,\r\n        )\r\n      } else {\r\n        realProvider = new Web3.providers.HttpProvider(\r\n          provider,\r\n          options.ethereumNodeTimeout || 10000,\r\n        )\r\n      }\r\n    } else {\r\n      realProvider = provider\r\n    }\r\n\r\n    this.web3 = new Web3(realProvider)\r\n\r\n    if (testing) {\r\n      this.testing = new EVM(realProvider)\r\n      this.snapshot = this.testing.snapshot()\r\n    }\r\n\r\n    if (options.defaultAccount) {\r\n      this.web3.eth.defaultAccount = options.defaultAccount\r\n    }\r\n    this.contracts = new Contracts(realProvider, networkId, this.web3, options)\r\n    this.erc20Address = contractAddresses.erc20[networkId]\r\n    this.erc20v2Address = contractAddresses.erc20v2[networkId]\r\n    this.farmAddress = contractAddresses.farm[networkId]\r\n    this.wethAddress = contractAddresses.weth[networkId]\r\n  }\r\n\r\n  setProvider(provider, networkId) {\r\n    this.web3.setProvider(provider)\r\n    this.contracts.setProvider(provider, networkId)\r\n    this.operation.setNetworkId(networkId)\r\n  }\r\n\r\n  toBigN(a) {\r\n    return BigNumber(a)\r\n  }\r\n}\r\n","import Web3 from 'web3'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport { Farm as Yam } from './Farm.js'\r\nexport { Web3, BigNumber }\r\n","import React, { createContext, useEffect, useState } from 'react'\r\n\r\nimport { useWallet } from 'use-wallet'\r\n\r\nimport { Yam } from '../../farm'\r\n\r\nexport interface YamContext {\r\n  yam?: typeof Yam\r\n}\r\n\r\nexport const Context = createContext<YamContext>({\r\n  yam: undefined,\r\n})\r\n\r\ndeclare global {\r\n  interface Window {\r\n    yamsauce: any\r\n  }\r\n}\r\n\r\nconst YamProvider: React.FC = ({ children }) => {\r\n  const { ethereum }: { ethereum: any } = useWallet()\r\n  const [yam, setYam] = useState<any>()\r\n\r\n  // @ts-ignore\r\n  window.yam = yam\r\n  // @ts-ignore\r\n  window.eth = ethereum\r\n\r\n  useEffect(() => {\r\n    if (ethereum) {\r\n      const chainId = Number(ethereum.chainId)\r\n      const yamLib = new Yam(ethereum, chainId, false, {\r\n        defaultAccount: ethereum.selectedAddress,\r\n        defaultConfirmations: 1,\r\n        autoGasMultiplier: 1.5,\r\n        testing: false,\r\n        defaultGas: '6000000',\r\n        defaultGasPrice: '1000000000000',\r\n        accounts: [],\r\n        ethereumNodeTimeout: 10000,\r\n      })\r\n      setYam(yamLib)\r\n      window.yamsauce = yamLib\r\n    }\r\n  }, [ethereum])\r\n\r\n  return <Context.Provider value={{ yam }}>{children}</Context.Provider>\r\n}\r\n\r\nexport default YamProvider\r\n","import { useContext } from 'react'\r\nimport { Context } from '../contexts/YamProvider'\r\n\r\nconst useYam = () => {\r\n  const { yam } = useContext(Context)\r\n  return yam\r\n}\r\n\r\nexport default useYam","import { ethers } from 'ethers'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport ERC20Abi from './lib/abi/erc20.json'\r\n\r\nimport BigNumber from 'bignumber.js'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst GAS_LIMIT = {\r\n  STAKING: {\r\n    DEFAULT: 200000,\r\n    SNX: 850000,\r\n  },\r\n}\r\n\r\nexport const getFarmAddress = (farm) => {\r\n  return farm && farm.farmAddress\r\n}\r\nexport const getERC20Address = (farm) => {\r\n  return farm && farm.erc20Address\r\n}\r\nexport const getWethContract = (farm) => {\r\n  return farm && farm.contracts && farm.contracts.weth\r\n}\r\n\r\nexport const getFarmContract = (farm) => {\r\n  return farm && farm.contracts && farm.contracts.farm\r\n}\r\nexport const getERC20Contract = (farm) => {\r\n  return farm && farm.contracts && farm.contracts.erc20\r\n}\r\n\r\nexport const getFarms = (farm) => {\r\n  return farm\r\n    ? farm.contracts.pools.map(\r\n        ({\r\n          id,\r\n          pid,\r\n          version,\r\n          name,\r\n          symbol,\r\n          icon,\r\n          tokenAddress,\r\n          tokenSymbol,\r\n          tokenContract,\r\n          lpAddress,\r\n          lpContract,\r\n          pool,\r\n        }) => ({\r\n          id,\r\n          pid,\r\n          version,\r\n          name,\r\n          lpToken: symbol,\r\n          lpTokenAddress: lpAddress,\r\n          lpContract,\r\n          tokenAddress,\r\n          tokenSymbol,\r\n          tokenContract,\r\n          earnToken: 'lto',\r\n          earnTokenAddress: farm.contracts.erc20.options.address,\r\n          icon,\r\n          pool,\r\n        }),\r\n      )\r\n    : []\r\n}\r\n\r\nexport const getPoolWeight = async (farmContract, pid) => {\r\n  try {\r\n    const { allocPoint } = await farmContract.methods.poolInfo(pid).call()\r\n    const totalAllocPoint = await farmContract.methods.totalAllocPoint().call()\r\n    return new BigNumber(allocPoint).div(new BigNumber(totalAllocPoint))\r\n  } catch {\r\n    return new BigNumber(0)\r\n  }\r\n}\r\n\r\nexport const getEarned = async (farmContract, pid, account) => {\r\n  return farmContract.methods.pending(pid, account).call()\r\n}\r\n\r\nexport const getTotalLPWethValue = async (\r\n  farmContract,\r\n  wethContract,\r\n  lpContract,\r\n  tokenContract,\r\n  pid,\r\n) => {\r\n  // Get balance of the token address\r\n  const tokenAmountWholeLP = await tokenContract.methods\r\n    .balanceOf(lpContract.options.address)\r\n    .call()\r\n  const tokenDecimals = await tokenContract.methods.decimals().call()\r\n  // Get the share of lpContract that farmContract owns\r\n  const balance = await lpContract.methods\r\n    .balanceOf(farmContract.options.address)\r\n    .call()\r\n  // Convert that into the portion of total lpContract = p1\r\n  const totalSupply = await lpContract.methods.totalSupply().call()\r\n  // Get total weth value for the lpContract = w1\r\n  const lpContractWeth = await wethContract.methods\r\n    .balanceOf(lpContract.options.address)\r\n    .call()\r\n  // Return p1 * w1 * 2\r\n  const portionLp = new BigNumber(balance).div(new BigNumber(totalSupply))\r\n  const lpWethWorth = new BigNumber(lpContractWeth)\r\n  const totalLpWethValue = portionLp.times(lpWethWorth).times(new BigNumber(2))\r\n  // Calculate\r\n  const tokenAmount = new BigNumber(tokenAmountWholeLP)\r\n    .times(portionLp)\r\n    .div(new BigNumber(10).pow(tokenDecimals))\r\n\r\n  const wethAmount = new BigNumber(lpContractWeth)\r\n    .times(portionLp)\r\n    .div(new BigNumber(10).pow(18))\r\n  return {\r\n    tokenAmount,\r\n    wethAmount,\r\n    totalWethValue: totalLpWethValue.div(new BigNumber(10).pow(18)),\r\n    tokenPriceInWeth: wethAmount.div(tokenAmount),\r\n    poolWeight: await getPoolWeight(farmContract, pid),\r\n  }\r\n}\r\n\r\nexport const approve = async (lpContract, farmContract, account) => {\r\n  return lpContract.methods\r\n    .approve(farmContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const getFarmSupply = async (farm) => {\r\n  return new BigNumber(await farm.contracts.erc20.methods.totalSupply().call())\r\n}\r\n\r\n//\r\n\r\nexport const getPoolStartTime = async (farmContract) => {\r\n  return await farmContract.methods.starttime().call()\r\n}\r\n\r\nexport const stake = async (farmContract, pid, amount, account) => {\r\n  return farmContract.methods\r\n    .deposit(\r\n      pid,\r\n      new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\r\n    )\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      console.log(tx)\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (farmContract, pid, amount, account) => {\r\n  return farmContract.methods\r\n    .withdraw(\r\n      pid,\r\n      new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\r\n    )\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      console.log(tx)\r\n      return tx.transactionHash\r\n    })\r\n}\r\nexport const harvest = async (farmContract, pid, account) => {\r\n  return farmContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      console.log(tx)\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const getStaked = async (farmContract, pid, account) => {\r\n  try {\r\n    const { amount } = await farmContract.methods.userInfo(pid, account).call()\r\n    return new BigNumber(amount)\r\n  } catch {\r\n    return new BigNumber(0)\r\n  }\r\n}\r\n\r\nexport const redeem = async (farmContract, account) => {\r\n  let now = new Date().getTime() / 1000\r\n  if (now >= 1597172400) {\r\n    return farmContract.methods\r\n      .exit()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        console.log(tx)\r\n        return tx.transactionHash\r\n      })\r\n  } else {\r\n    alert('pool not active')\r\n  }\r\n}\r\n\r\nexport const getPoolContracts = async (yam) => {\r\n  const pools = Object.keys(yam.contracts)\r\n    .filter((c) => c.indexOf('_pool') !== -1)\r\n    .reduce((acc, cur) => {\r\n      const newAcc = { ...acc }\r\n      newAcc[cur] = yam.contracts[cur]\r\n      return newAcc\r\n    }, {})\r\n  return pools\r\n}\r\n\r\n// export const getStaked = async (yam, pool, account) => {\r\n//   return yam.toBigN(await pool.methods.balanceOf(account).call())\r\n// }\r\n\r\nexport const getCurrentPrice = async (yam) => {\r\n  // FORBROCK: get current YAM price\r\n  return yam.toBigN(await yam.contracts.rebaser.methods.getCurrentTWAP().call())\r\n}\r\n\r\nexport const getTargetPrice = async (yam) => {\r\n  return yam.toBigN(1).toFixed(2)\r\n}\r\n\r\nexport const getCirculatingSupply = async (yam) => {\r\n  let now = await yam.web3.eth.getBlock('latest')\r\n  let scalingFactor = yam.toBigN(\r\n    await yam.contracts.yam.methods.yamsScalingFactor().call(),\r\n  )\r\n  let starttime = yam\r\n    .toBigN(await yam.contracts.eth_pool.methods.starttime().call())\r\n    .toNumber()\r\n  let timePassed = now['timestamp'] - starttime\r\n  if (timePassed < 0) {\r\n    return 0\r\n  }\r\n  let yamsDistributed = yam.toBigN((8 * timePassed * 250000) / 625000) //yams from first 8 pools\r\n  let starttimePool2 = yam\r\n    .toBigN(await yam.contracts.ycrv_pool.methods.starttime().call())\r\n    .toNumber()\r\n  timePassed = now['timestamp'] - starttime\r\n  let pool2Yams = yam.toBigN((timePassed * 1500000) / 625000) // yams from second pool. note: just accounts for first week\r\n  let circulating = pool2Yams\r\n    .plus(yamsDistributed)\r\n    .times(scalingFactor)\r\n    .div(10 ** 36)\r\n    .toFixed(2)\r\n  return circulating\r\n}\r\n\r\nexport const getNextRebaseTimestamp = async (yam) => {\r\n  try {\r\n    let now = await yam.web3.eth.getBlock('latest').then((res) => res.timestamp)\r\n    let interval = 43200 // 12 hours\r\n    let offset = 28800 // 8am/8pm utc\r\n    let secondsToRebase = 0\r\n    if (await yam.contracts.rebaser.methods.rebasingActive().call()) {\r\n      if (now % interval > offset) {\r\n        secondsToRebase = interval - (now % interval) + offset\r\n      } else {\r\n        secondsToRebase = offset - (now % interval)\r\n      }\r\n    } else {\r\n      let twap_init = yam\r\n        .toBigN(await yam.contracts.rebaser.methods.timeOfTWAPInit().call())\r\n        .toNumber()\r\n      if (twap_init > 0) {\r\n        let delay = yam\r\n          .toBigN(await yam.contracts.rebaser.methods.rebaseDelay().call())\r\n          .toNumber()\r\n        let endTime = twap_init + delay\r\n        if (endTime % interval > offset) {\r\n          secondsToRebase = interval - (endTime % interval) + offset\r\n        } else {\r\n          secondsToRebase = offset - (endTime % interval)\r\n        }\r\n        return endTime + secondsToRebase\r\n      } else {\r\n        return now + 13 * 60 * 60 // just know that its greater than 12 hours away\r\n      }\r\n    }\r\n    return secondsToRebase\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport const getTotalSupply = async (yam) => {\r\n  return await yam.contracts.yam.methods.totalSupply().call()\r\n}\r\n\r\nexport const getStats = async (yam) => {\r\n  const curPrice = await getCurrentPrice(yam)\r\n  const circSupply = await getCirculatingSupply(yam)\r\n  const nextRebase = await getNextRebaseTimestamp(yam)\r\n  const targetPrice = await getTargetPrice(yam)\r\n  const totalSupply = await getTotalSupply(yam)\r\n  return {\r\n    circSupply,\r\n    curPrice,\r\n    nextRebase,\r\n    targetPrice,\r\n    totalSupply,\r\n  }\r\n}\r\n\r\nexport const vote = async (yam, account) => {\r\n  return yam.contracts.gov.methods.castVote(0, true).send({ from: account })\r\n}\r\n\r\nexport const delegate = async (yam, account) => {\r\n  return yam.contracts.yam.methods\r\n    .delegate('0x683A78bA1f6b25E29fbBC9Cd1BFA29A51520De84')\r\n    .send({ from: account })\r\n}\r\n\r\nexport const didDelegate = async (yam, account) => {\r\n  return (\r\n    (await yam.contracts.yam.methods.delegates(account).call()) ===\r\n    '0x683A78bA1f6b25E29fbBC9Cd1BFA29A51520De84'\r\n  )\r\n}\r\n\r\nexport const getVotes = async (yam) => {\r\n  const votesRaw = new BigNumber(\r\n    await yam.contracts.yam.methods\r\n      .getCurrentVotes('0x683A78bA1f6b25E29fbBC9Cd1BFA29A51520De84')\r\n      .call(),\r\n  ).div(10 ** 24)\r\n  return votesRaw\r\n}\r\n\r\nexport const getScalingFactor = async (yam) => {\r\n  return new BigNumber(\r\n    await yam.contracts.yam.methods.yamsScalingFactor().call(),\r\n  )\r\n}\r\n\r\nexport const getDelegatedBalance = async (yam, account) => {\r\n  return new BigNumber(\r\n    await yam.contracts.yam.methods.balanceOfUnderlying(account).call(),\r\n  ).div(10 ** 24)\r\n}\r\n\r\nexport const migrate = async (yam, account) => {\r\n  return yam.contracts.yamV2migration.methods.migrate().send({ from: account })\r\n}\r\n\r\nexport const getMigrationEndTime = async (yam) => {\r\n  return yam\r\n    .toBigN(await yam.contracts.yamV2migration.methods.startTime().call())\r\n    .plus(yam.toBigN(86400 * 3))\r\n    .toNumber()\r\n}\r\n","import Web3 from 'web3'\r\nimport { provider } from 'web3-core'\r\nimport { AbiItem } from 'web3-utils'\r\n\r\nimport ERC20ABI from '../constants/abi/ERC20.json'\r\nimport { Contract } from 'web3-eth-contract'\r\n\r\nexport const getContract = (provider: provider, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract(\r\n    (ERC20ABI.abi as unknown) as AbiItem,\r\n    address,\r\n  )\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  farmContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods\r\n      .allowance(account, farmContract.options.address)\r\n      .call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getBalance = async (\r\n  provider: provider,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const lpContract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await lpContract.methods\r\n      .balanceOf(userAddress)\r\n      .call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport Web3 from 'web3'\r\nimport { provider } from 'web3-core'\r\nimport { useWallet } from 'use-wallet'\r\n// import debounce from 'debounce'\r\n\r\nconst useBlock = () => {\r\n  const [block, setBlock] = useState(0)\r\n  const { ethereum }: { ethereum: provider } = useWallet()\r\n\r\n  useEffect(() => {\r\n    // const setBlockDebounced = debounce(setBlock, 300)\r\n    if (!ethereum) return\r\n    const web3 = new Web3(ethereum)\r\n\r\n    // const subscription = new Web3(ethereum).eth.subscribe(\r\n    //   'newBlockHeaders',\r\n    //   (error, result) => {\r\n    //     if (!error) {\r\n    //       setBlockDebounced(result.number)\r\n    //     }\r\n    //   },\r\n    // )\r\n\r\n    const interval = setInterval(async () => {\r\n      const latestBlockNumber = await web3.eth.getBlockNumber()\r\n      if (block !== latestBlockNumber) {\r\n        setBlock(latestBlockNumber)\r\n      }\r\n    }, 1000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [ethereum])\r\n\r\n  return block\r\n}\r\n\r\nexport default useBlock\r\n","import { useCallback, useEffect, useState } from 'react'\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from 'use-wallet'\r\nimport { provider } from 'web3-core'\r\n\r\nimport { getBalance } from '../utils/erc20'\r\nimport useBlock from './useBlock'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const {\r\n    account,\r\n    ethereum,\r\n  }: { account: string; ethereum: provider } = useWallet()\r\n  const block = useBlock()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await getBalance(ethereum, tokenAddress, account)\r\n    setBalance(new BigNumber(balance))\r\n  }, [account, ethereum, tokenAddress])\r\n\r\n  useEffect(() => {\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, setBalance, block, tokenAddress])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 9) => {\r\n  const displayBalance = balance.dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getDisplayBalance = (balance: BigNumber, decimals = 9) => {\r\n  const displayBalance = balance.dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toPrecision(5)\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 9) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface LabelProps {\r\n  text?: string,\r\n}\r\n\r\nconst Label: React.FC<LabelProps> = ({ text }) => (\r\n  <StyledLabel>{text}</StyledLabel>\r\n)\r\n\r\nconst StyledLabel = styled.div`\r\n  color: ${props => props.theme.color.grey[800]};\r\n  text-align: center;\r\n  font-weight: 300;\r\n  margin-top: 5px;\r\n`\r\n\r\nexport default Label\r\n","import React, { useState, useEffect } from 'react'\r\nimport CountUp from 'react-countup'\r\n\r\nimport styled from 'styled-components'\r\n\r\ninterface ValueProps {\r\n  value: string | number\r\n  decimals?: number\r\n}\r\n\r\nconst Value: React.FC<ValueProps> = ({ value, decimals }) => {\r\n  const [start, updateStart] = useState(0)\r\n  const [end, updateEnd] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (typeof value === 'number') {\r\n      updateStart(end)\r\n      updateEnd(value)\r\n    }\r\n  }, [value])\r\n\r\n  return (\r\n    <StyledValue>\r\n      {typeof value == 'string' ? (\r\n        value\r\n      ) : (\r\n        <CountUp\r\n          start={start}\r\n          end={end}\r\n          decimals={\r\n            decimals !== undefined ? decimals : end < 0 ? 4 : end > 1e5 ? 0 : 3\r\n          }\r\n          duration={1}\r\n          separator=\",\"\r\n        />\r\n      )}\r\n    </StyledValue>\r\n  )\r\n}\r\n\r\nconst StyledValue = styled.div`\r\n  color: ${(props) => props.theme.color.grey[800]};\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n`\r\n\r\nexport default Value\r\n","/*\r\n1 Mainnet\r\n3 Ropsten\r\n4 Rinkeby\r\n5 Goerli\r\n42 Kovan\r\n56 Binance Smart Chain Mainnet\r\n97 Binance Smart Chain Testnet\r\n100 xDai\r\n137 Matic\r\n1287 Moonbase Testnet\r\n80001 Matic Testnet\r\n43113 Avalanche Testnet\r\n43114 Avalanche Mainnet\r\n*/\r\n\r\nexport const getEthChainInfo = () => {\r\n    let chainId: number = 97;\r\n    let rpcUrl: string = 'https://data-seed-prebsc-1-s1.binance.org:8545/';\r\n    let ethscanType: string = 'testnet.';\r\n    const href = window.location.href;\r\n    if (/\\/\\/astonishing-pithivier-5e4765.netlify.app/.test(href)) {\r\n         chainId = 56;\r\n         rpcUrl = 'https://bsc-dataseed.binance.org/';\r\n         ethscanType = '';\r\n    }\r\n    return {\r\n        chainId,\r\n        rpcUrl,\r\n        ethscanType\r\n    }\r\n};\r\n","import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from 'use-wallet'\r\nimport useYam from '../../../hooks/useYam'\r\nimport { getERC20Address } from '../../../farm/utils'\r\n\r\nimport useTokenBalance from '../../../hooks/useTokenBalance'\r\nimport {\r\n  getBalanceNumber,\r\n} from '../../../utils/formatBalance'\r\n\r\nimport Button from '../../Button'\r\nimport CardIcon from '../../CardIcon'\r\nimport Label from '../../Label'\r\nimport Modal, { ModalProps } from '../../Modal'\r\nimport ModalActions from '../../ModalActions'\r\nimport ModalContent from '../../ModalContent'\r\nimport ModalTitle from '../../ModalTitle'\r\nimport Spacer from '../../Spacer'\r\nimport Value from '../../Value'\r\nimport {getEthChainInfo} from \"../../../utils/getEthChainInfo\";\r\n\r\nimport imageLTO from '../../../assets/img/logo-rev.png'\r\n\r\nconst {\r\n  ethscanType\r\n} = getEthChainInfo();\r\n\r\nconst AccountModal: React.FC<ModalProps> = ({ onDismiss }) => {\r\n  const { account, reset } = useWallet()\r\n\r\n  const handleSignOutClick = useCallback(() => {\r\n    onDismiss!()\r\n    reset()\r\n  }, [onDismiss, reset])\r\n\r\n  const yam = useYam()\r\n  const erc20address = getERC20Address(yam)\r\n  const erc20Balance = useTokenBalance(erc20address)\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text=\"My Account\" />\r\n      <ModalContent>\r\n        <Spacer />\r\n\r\n        <div style={{ display: 'flex' }}>\r\n          <StyledBalanceWrapper>\r\n            <CardIcon>\r\n              <img src={imageLTO} height=\"60\" style={{ marginTop: -4 }} />\r\n            </CardIcon>\r\n            <StyledBalance>\r\n              <Value value={getBalanceNumber(erc20Balance, 18)} />\r\n              <Label text=\"$ETHOS Balance\" />\r\n            </StyledBalance>\r\n          </StyledBalanceWrapper>\r\n        </div>\r\n\r\n        <Spacer />\r\n        <Button\r\n          href={`https://bscscan.com/address/${account}`}\r\n          text=\"View on BSC Scan\"\r\n          variant=\"secondary\"\r\n        />\r\n        <Spacer />\r\n        <Button\r\n          onClick={handleSignOutClick}\r\n          text=\"Sign out\"\r\n          variant=\"secondary\"\r\n        />\r\n      </ModalContent>\r\n      <ModalActions>\r\n        <Button\r\n            onClick={onDismiss}\r\n            text=\"Cancel\"\r\n            variant=\"secondary\"\r\n        />\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst StyledBalance = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledBalanceWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nexport default AccountModal;\r\n","import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { useWallet } from 'use-wallet'\r\n\r\nimport useModal from '../../../hooks/useModal'\r\n\r\nimport Button from '../../Button'\r\nimport WalletProviderModal from '../../WalletProviderModal'\r\n\r\nimport AccountModal from './AccountModal'\r\n\r\ninterface AccountButtonProps {}\r\n\r\nconst AccountButton: React.FC<AccountButtonProps> = (props) => {\r\n\r\n  const [onPresentAccountModal] = useModal(<AccountModal />)\r\n  const [onPresentWalletProviderModal] = useModal(<WalletProviderModal />, 'provider')\r\n\r\n  const { account } = useWallet()\r\n\r\n  const handleUnlockClick = useCallback(() => {\r\n    onPresentWalletProviderModal()\r\n  }, [onPresentWalletProviderModal])\r\n\r\n  return (\r\n    <StyledAccountButton>\r\n      {!account ? (\r\n        <Button\r\n          onClick={handleUnlockClick}\r\n          size=\"sm\"\r\n          text=\"Unlock Wallet\"\r\n          menuButton\r\n        />\r\n      ) : (\r\n        <Button\r\n          onClick={onPresentAccountModal}\r\n          size=\"sm\"\r\n          text=\"My Account\"\r\n          menuButton\r\n        />\r\n      )}\r\n    </StyledAccountButton>\r\n  )\r\n}\r\n\r\nconst StyledAccountButton = styled.div``\r\n\r\nexport default AccountButton\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\ninterface NavProps {\r\n  showMenu: boolean\r\n}\r\n\r\nconst Nav: React.FC<NavProps> = ({ showMenu }) => {\r\n  return (\r\n    <StyledNav>\r\n      {showMenu && (\r\n        <>\r\n      <StyledLink exact activeClassName=\"active\" to=\"/\">\r\n        Home\r\n      </StyledLink>\r\n      <StyledLink exact activeClassName=\"active\" to=\"/farms\">\r\n        Menu\r\n      </StyledLink>\r\n      </>)}\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nconst StyledNav = styled.nav`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledLink = styled(NavLink)`\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  font-weight: 700;\r\n  padding-left: ${(props) => props.theme.spacing[3]}px;\r\n  padding-right: ${(props) => props.theme.spacing[3]}px;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: ${(props) => props.theme.color.grey[500]};\r\n  }\r\n  &.active {\r\n    color: ${(props) => props.theme.color.primary.main};\r\n  }\r\n  @media (max-width: 400px) {\r\n    padding-left: ${(props) => props.theme.spacing[2]}px;\r\n    padding-right: ${(props) => props.theme.spacing[2]}px;\r\n  }\r\n`\r\n\r\nconst StyledAbsoluteLink = styled.a`\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n  font-weight: 700;\r\n  padding-left: ${(props) => props.theme.spacing[3]}px;\r\n  padding-right: ${(props) => props.theme.spacing[3]}px;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: ${(props) => props.theme.color.grey[500]};\r\n  }\r\n  &.active {\r\n    color: ${(props) => props.theme.color.primary.main};\r\n  }\r\n  @media (max-width: 400px) {\r\n    padding-left: ${(props) => props.theme.spacing[2]}px;\r\n    padding-right: ${(props) => props.theme.spacing[2]}px;\r\n  }\r\n`\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Container from '../Container'\r\nimport Logo from '../Logo'\r\n\r\nimport AccountButton from './components/AccountButton'\r\nimport Nav from './components/Nav'\r\n\r\ninterface TopBarProps {\r\n  onPresentMobileMenu: () => void,\r\n  showButton?: boolean\r\n}\r\n\r\nconst TopBar: React.FC<TopBarProps> = ({ onPresentMobileMenu, showButton = false }) => {\r\n  return (\r\n    <StyledTopBar>\r\n      <Container size=\"lg\">\r\n        <StyledTopBarInner>\r\n          <StyledLogoWrapper>\r\n            <Logo />\r\n          </StyledLogoWrapper>\r\n          <Nav showMenu={false} />\r\n          {showButton &&\r\n          <StyledAccountButtonWrapper>\r\n            <AccountButton />\r\n          </StyledAccountButtonWrapper>\r\n          }\r\n        </StyledTopBarInner>\r\n      </Container>\r\n    </StyledTopBar>\r\n  )\r\n}\r\n\r\nconst StyledLogoWrapper = styled.div`\r\n  width: 360px;\r\n  @media (max-width: 400px) {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst StyledTopBar = styled.div`\r\nbackground: transparent;\r\n`\r\n\r\nconst StyledTopBarInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: ${(props) => props.theme.topBarSize}px;\r\n  justify-content: space-between;\r\n  max-width: ${(props) => props.theme.siteWidth}px;\r\n  width: 100%;\r\n`\r\nconst StyledNavWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: center;\r\n  @media (max-width: 400px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst StyledAccountButtonWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 156px;\r\n  @media (max-width: 400px) {\r\n    justify-content: center;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst StyledMenuButton = styled.button`\r\n  background: none;\r\n  border: 0;\r\n  margin: 0;\r\n  outline: 0;\r\n  padding: 0;\r\n  display: none;\r\n  @media (max-width: 400px) {\r\n    align-items: center;\r\n    display: flex;\r\n    height: 44px;\r\n    justify-content: center;\r\n    width: 44px;\r\n  }\r\n`\r\n\r\nexport default TopBar\r\n","import { createContext } from 'react'\r\nimport { FarmsContext } from './types'\r\n\r\nconst context = createContext<FarmsContext>({\r\n  farms: [],\r\n  unharvested: 0,\r\n})\r\n\r\nexport default context","import React, { useState } from 'react'\r\n\r\nimport { useWallet } from 'use-wallet'\r\nimport useYam from '../../hooks/useYam'\r\n\r\nimport { getFarms } from '../../farm/utils'\r\n\r\nimport Context from './context'\r\n\r\nconst Farms: React.FC = ({ children }) => {\r\n  const [unharvested] = useState(0)\r\n\r\n  const yam = useYam()\r\n  const { account } = useWallet()\r\n\r\n  const farms = getFarms(yam)\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        farms,\r\n        unharvested,\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n","import { createContext } from 'react'\r\nimport { Transaction, TransactionsMap } from './types'\r\n\r\ninterface TransactionsContext {\r\n  transactions: TransactionsMap,\r\n  onAddTransaction: (tx: Transaction) => void,\r\n}\r\n\r\nexport default createContext<TransactionsContext>({\r\n  transactions: {},\r\n  onAddTransaction: (tx: Transaction) => {},\r\n})","import { TransactionReceipt } from 'web3-core'\r\nimport { Transaction, TransactionsMap } from './types'\r\n\r\nconst ADD_TRANSACTION = 'ADD_TRANSACTION'\r\nconst RECEIVE_TX_RECEIPT = 'RECEIVE_TX_RECEIPT'\r\nconst SET_TRANSACTIONS = 'SET_TRANSACTIONS'\r\n\r\ninterface AddTransactionAction {\r\n  type: typeof ADD_TRANSACTION,\r\n  transaction: Transaction\r\n}\r\n\r\ninterface ReceiveTxReceiptAction {\r\n  type: typeof RECEIVE_TX_RECEIPT,\r\n  txHash: string,\r\n  receipt: TransactionReceipt\r\n}\r\n\r\ninterface SetTransactionsAction {\r\n  type: typeof SET_TRANSACTIONS,\r\n  transactions: TransactionsMap\r\n}\r\n\r\ntype TransactionsActions = AddTransactionAction | ReceiveTxReceiptAction | SetTransactionsAction\r\n\r\nexport interface TransactionsState {\r\n  initialized: boolean,\r\n  transactions: TransactionsMap\r\n}\r\n\r\nexport const addTransaction = (transaction: Transaction): AddTransactionAction => ({\r\n  type: ADD_TRANSACTION,\r\n  transaction,\r\n})\r\n\r\nexport const receiveTxReceipt = (txHash: string, receipt: TransactionReceipt): ReceiveTxReceiptAction => ({\r\n  type: RECEIVE_TX_RECEIPT,\r\n  txHash,\r\n  receipt,\r\n})\r\n\r\nexport const setTransactions = (transactions: TransactionsMap): SetTransactionsAction => ({\r\n  type: SET_TRANSACTIONS,\r\n  transactions,\r\n})\r\n\r\nexport const initialState: TransactionsState = {\r\n  initialized: false,\r\n  transactions: {}\r\n}\r\n\r\nconst reducer = (state: TransactionsState, action: TransactionsActions): TransactionsState => {\r\n  switch (action.type) {\r\n    case ADD_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        transactions: {\r\n          ...state.transactions,\r\n          [action.transaction.hash]: action.transaction,\r\n        }\r\n      }\r\n    case RECEIVE_TX_RECEIPT:\r\n      return {\r\n        ...state,\r\n        transactions: {\r\n          ...state.transactions,\r\n          [action.txHash]: {\r\n            ...state.transactions[action.txHash],\r\n            receipt: action.receipt,\r\n          }\r\n        }\r\n      }\r\n    case SET_TRANSACTIONS:\r\n      return {\r\n        ...state,\r\n        transactions: action.transactions,\r\n        initialized: true,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer","import React, { useCallback, useEffect, useReducer } from 'react'\r\n\r\nimport Context from './context'\r\nimport reducer, {\r\n  initialState,\r\n  setTransactions,\r\n  addTransaction,\r\n} from './reducer'\r\nimport { Transaction, TransactionsMap } from './types'\r\n\r\nconst TransactionsProvider: React.FC = ({ children }) => {\r\n  const [{ initialized, transactions }, dispatch] = useReducer(reducer, initialState)\r\n\r\n  const handleAddTransaction = useCallback((tx: Transaction) => {\r\n    dispatch(addTransaction(tx))\r\n  }, [dispatch])\r\n\r\n  const fetchTransactions = useCallback(async () => {\r\n    try {\r\n      const txsRaw = localStorage.getItem('transactions')\r\n      const txs = JSON.parse(txsRaw) as TransactionsMap || {}\r\n      dispatch(setTransactions(txs))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (initialized) {\r\n      localStorage.setItem('transactions', JSON.stringify(transactions))\r\n    }\r\n  }, [initialized, transactions])\r\n\r\n  useEffect(() => {\r\n    fetchTransactions()\r\n  }, [fetchTransactions])\r\n\r\n  return (\r\n    <Context.Provider value={{\r\n      transactions,\r\n      onAddTransaction: handleAddTransaction,\r\n    }}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default TransactionsProvider","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { contractAddresses } from '../../../farm/lib/constants'\r\nimport { getEthChainInfo } from '../../../utils/getEthChainInfo'\r\nimport githubLogo from '../../../assets/img/github.png'\r\nimport { GITHUB } from '../../../constants/config'\r\n\r\nconst { ethscanType, chainId } = getEthChainInfo()\r\n\r\nconst contractAddressesTemp = contractAddresses as { [index: string]: any }\r\n\r\nconst Nav: React.FC = () => {\r\n  return (\r\n    <StyledNav>\r\n      <StyledLink\r\n        target=\"_blank\"\r\n        href={`https://bscscan.com/token/${contractAddressesTemp.erc20[chainId]}#code`}\r\n      >\r\n        BEP-20 Contract\r\n      </StyledLink>\r\n\r\n      <StyledLink\r\n        target=\"_blank\"\r\n        href={`https://bscscan.com/address/${contractAddressesTemp.farm[chainId]}#code`}\r\n      >\r\n        Farm Contract\r\n      </StyledLink>\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nconst StyledNav = styled.nav`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledLink = styled.a`\r\n  color: #8cd4e4;\r\n  padding-left: ${(props) => props.theme.spacing[3]}px;\r\n  padding-right: ${(props) => props.theme.spacing[3]}px;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: #8cd4e4;\r\n    text-decoration: underline;\r\n  }\r\n  img {\r\n    height: 19px;\r\n  }\r\n`\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Nav from './components/Nav'\r\n\r\nconst Footer: React.FC = () => (\r\n  <StyledFooter>\r\n    <StyledFooterInner>\r\n      <Nav />\r\n    </StyledFooterInner>\r\n  </StyledFooter>\r\n)\r\n\r\nconst StyledFooter = styled.footer`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst StyledFooterInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  height: ${props => props.theme.topBarSize}px;\r\n  max-width: ${props => props.theme.siteWidth}px;\r\n  width: 100%;\r\n  font-weight: 300;\r\n`\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Footer from '../Footer'\r\nimport TopBar from '../TopBar'\r\n\r\nconst Page: React.FC = ({ children }) => (\r\n  <StyledPage>\r\n    <StyledMain>\r\n      {children}\r\n    </StyledMain>\r\n    <Footer />\r\n  </StyledPage>\r\n)\r\n\r\nconst StyledPage = styled.div``\r\n\r\nconst StyledMain = styled.div`\r\n  background: transparent;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: calc(100vh - ${props => props.theme.topBarSize * 2}px);\r\n`\r\n\r\nexport default Page\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Container from '../Container'\r\n\r\ninterface PageHeaderProps {\r\n  icon?: React.ReactNode\r\n  subtitle?: string\r\n  title?: string\r\n}\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({ icon, subtitle, title }) => {\r\n  return (\r\n    <>\r\n      <StyledPageHeader>\r\n        {icon && <StyledIcon>{icon}</StyledIcon>}\r\n        {title && <StyledTitle>{title}</StyledTitle>}\r\n        <StyledSubtitle>{subtitle}</StyledSubtitle>\r\n      </StyledPageHeader>\r\n    </>\r\n  )\r\n}\r\n\r\nconst StyledPageHeader = styled.div`\r\n  width:100%;\r\n  height: 300px;\r\n  background: transparent;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\r\n  padding-top: ${(props) => props.theme.spacing[6]}px;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst StyledIcon = styled.div`\r\n  font-size: 120px;\r\n  height: 120px;\r\n  line-height: 120px;\r\n  text-align: center;\r\n`\r\n//  width: 120px;\r\n\r\nconst StyledTitle = styled.h1`\r\n  color: ${(props) => props.theme.color.white};\r\n  margin: 0;\r\n  margin-bottom: 10px;\r\n  font-size: 40px;\r\n  font-weight: 500;\r\n  padding: 0;\r\n  letter-spacing: 1px;\r\n`\r\n\r\nconst StyledSubtitle = styled.h3`\r\n  color: ${(props) => props.theme.color.white};\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n`\r\n\r\nexport default PageHeader\r\n","import { useContext } from 'react'\r\nimport { Context as FarmsContext, Farm } from '../contexts/Farms'\r\n\r\nconst useFarm = (id: string): Farm => {\r\n  const { farms } = useContext(FarmsContext)\r\n  const farm = farms.find(farm => farm.id === id)\r\n  return farm\r\n}\r\n\r\nexport default useFarm","import { useCallback } from 'react'\r\n\r\nimport { useWallet } from 'use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\n\r\nimport { redeem } from '../farm/utils'\r\n\r\nconst useRedeem = (farmContract: Contract) => {\r\n  const { account } = useWallet()\r\n\r\n  const handleRedeem = useCallback(async () => {\r\n    const txHash = await redeem(farmContract, account)\r\n    console.log(txHash)\r\n    return txHash\r\n  }, [account, farmContract])\r\n\r\n  return { onRedeem: handleRedeem }\r\n}\r\n\r\nexport default useRedeem\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { provider } from 'web3-core'\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from 'use-wallet'\r\n\r\nimport { getEarned, getFarmContract } from '../farm/utils'\r\nimport useYam from './useYam'\r\nimport useBlock from './useBlock'\r\n\r\nconst useEarnings = (pid: number) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const {\r\n    account,\r\n    ethereum,\r\n  }: { account: string; ethereum: provider } = useWallet()\r\n  const yam = useYam()\r\n  const farmContract = getFarmContract(yam)\r\n  const block = useBlock()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await getEarned(farmContract, pid, account)\r\n    setBalance(new BigNumber(balance))\r\n  }, [account, farmContract, yam])\r\n\r\n  useEffect(() => {\r\n    if (account && farmContract && yam) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, block, farmContract, setBalance, yam])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useEarnings\r\n","import { useCallback } from 'react'\r\n\r\nimport useYam from './useYam'\r\nimport { useWallet } from 'use-wallet'\r\n\r\nimport { harvest, getFarmContract } from '../farm/utils'\r\n\r\nconst useReward = (pid: number) => {\r\n  const { account } = useWallet()\r\n  const yam = useYam()\r\n  const farmContract = getFarmContract(yam)\r\n\r\n  const handleReward = useCallback(async () => {\r\n    const txHash = await harvest(farmContract, pid, account)\r\n    console.log(txHash)\r\n    return txHash\r\n  }, [account, pid, yam])\r\n\r\n  return { onReward: handleReward }\r\n}\r\n\r\nexport default useReward\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { Contract } from 'web3-eth-contract'\r\n\r\nimport Button from '../../../components/Button'\r\nimport Card from '../../../components/Card'\r\nimport CardContent from '../../../components/CardContent'\r\nimport CardIcon from '../../../components/CardIcon'\r\nimport Label from '../../../components/Label'\r\nimport Value from '../../../components/Value'\r\n\r\nimport useEarnings from '../../../hooks/useEarnings'\r\nimport useReward from '../../../hooks/useReward'\r\n\r\nimport imageLTO from '../../../assets/img/logo-rev.png'\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface HarvestProps {\r\n  pid: number\r\n}\r\n\r\nconst Harvest: React.FC<HarvestProps> = ({ pid }) => {\r\n  const earnings = useEarnings(pid)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useReward(pid)\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <StyledCardContentInner>\r\n          <StyledCardHeader>\r\n            <CardIcon>\r\n              <img src={imageLTO} height=\"50\" style={{ marginTop: -4 }} />\r\n            </CardIcon>\r\n            <Value value={getDisplayBalance(earnings, 18)} />\r\n            <Label text=\"Rewards Earned\" />\r\n          </StyledCardHeader>\r\n          <StyledCardActions>\r\n            <Button\r\n              disabled={!earnings.toNumber() || pendingTx}\r\n              text={pendingTx ? 'Collecting' : 'Harvest'}\r\n              variant={'secondary'}\r\n              border\r\n              onClick={async () => {\r\n                setPendingTx(true)\r\n                await onReward()\r\n                setPendingTx(false)\r\n              }}\r\n            />\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[6]}px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default Harvest\r\n","import { useCallback, useEffect, useState } from 'react'\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport useYam from './useYam'\r\nimport { useWallet } from 'use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\n\r\nimport { getAllowance } from '../utils/erc20'\r\nimport { getFarmContract } from '../farm/utils'\r\n\r\nconst useAllowance = (lpContract: Contract) => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string; ethereum: provider } = useWallet()\r\n  const yam = useYam()\r\n  const farmContract = getFarmContract(yam)\r\n\r\n  const fetchAllowance = useCallback(async () => {\r\n    const allowance = await getAllowance(\r\n      lpContract,\r\n      farmContract,\r\n      account,\r\n    )\r\n    setAllowance(new BigNumber(allowance))\r\n  }, [account, farmContract, lpContract])\r\n\r\n  useEffect(() => {\r\n    if (account && farmContract && lpContract) {\r\n      fetchAllowance()\r\n    }\r\n    let refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, farmContract, lpContract])\r\n\r\n  return allowance\r\n}\r\n\r\nexport default useAllowance\r\n","import { useCallback } from 'react'\r\n\r\nimport useYam from './useYam'\r\nimport { useWallet } from 'use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\n\r\nimport { approve, getFarmContract } from '../farm/utils'\r\n\r\nconst useApprove = (lpContract: Contract) => {\r\n  const { account }: { account: string; ethereum: provider } = useWallet()\r\n  const yam = useYam()\r\n  const farmContract = getFarmContract(yam)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, farmContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lpContract, farmContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\nexport default useApprove\r\n","import { useCallback } from 'react'\r\n\r\nimport useYam from './useYam'\r\nimport { useWallet } from 'use-wallet'\r\n\r\nimport { stake, getFarmContract } from '../farm/utils'\r\n\r\nconst useStake = (pid: number) => {\r\n  const { account } = useWallet()\r\n  const yam = useYam()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(\r\n        getFarmContract(yam),\r\n        pid,\r\n        amount,\r\n        account,\r\n      )\r\n      console.log(txHash)\r\n    },\r\n    [account, pid, yam],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import { useCallback, useEffect, useState } from 'react'\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from 'use-wallet'\r\n\r\nimport { getStaked, getFarmContract } from '../farm/utils'\r\nimport useYam from './useYam'\r\nimport useBlock from './useBlock'\r\n\r\nconst useStakedBalance = (pid: number) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const yam = useYam()\r\n  const farmContract = getFarmContract(yam)\r\n  const block = useBlock()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    const balance = await getStaked(farmContract, pid, account)\r\n    setBalance(new BigNumber(balance))\r\n  }, [account, pid, yam])\r\n\r\n  useEffect(() => {\r\n    if (account && yam) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, pid, setBalance, block, yam])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useStakedBalance\r\n","import { useCallback } from 'react'\r\n\r\nimport useYam from './useYam'\r\nimport { useWallet } from 'use-wallet'\r\n\r\nimport { unstake, getFarmContract } from '../farm/utils'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const { account } = useWallet()\r\n  const yam = useYam()\r\n  const farmContract = getFarmContract(yam)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(farmContract, pid, amount, account)\r\n      console.log(txHash)\r\n    },\r\n    [account, pid, yam],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode,\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void,\r\n  placeholder?: string,\r\n  startAdornment?: React.ReactNode,\r\n  value: string,\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({\r\n  endAdornment,\r\n  onChange,\r\n  placeholder,\r\n  startAdornment,\r\n  value,\r\n}) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  border-bottom: 1px solid ${props => props.theme.color.grey[300]};\r\n  display: flex;\r\n  height: auto;\r\n  padding: 0 ${props => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  background: none;\r\n  border: 0;\r\n  color: ${props => props.theme.color.grey[600]};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Button from '../Button'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string,\r\n  symbol: string,\r\n  onSelectMax?: () => void,\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({\r\n  max,\r\n  symbol,\r\n  onChange,\r\n  onSelectMax,\r\n  value,\r\n}) => {\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText>{max.toLocaleString()} {symbol} Available</StyledMaxText>\r\n      <Input\r\n        endAdornment={(\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" variant={'secondary'} text=\"Max\" onClick={onSelectMax} />\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        )}\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\n/*\r\n            <div>\r\n              <Button size=\"sm\" text=\"Max\" />\r\n            </div>\r\n*/\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n    width: ${props => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${props => props.theme.color.grey[400]};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${props => props.theme.color.grey[600]};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TokenInput\r\n","import React, { useCallback, useMemo, useState } from 'react'\r\n\r\nimport BigNumber from 'bignumber.js'\r\n\r\nimport Button from '../../../components/Button'\r\nimport Modal, { ModalProps } from '../../../components/Modal'\r\nimport ModalActions from '../../../components/ModalActions'\r\nimport ModalTitle from '../../../components/ModalTitle'\r\nimport TokenInput from '../../../components/TokenInput'\r\n\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface DepositModalProps extends ModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  tokenName?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({\r\n  max,\r\n  onConfirm,\r\n  onDismiss,\r\n  tokenName = '',\r\n}) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Deposit ${tokenName} Tokens`} />\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\r\n        <Button\r\n          disabled={!val || val == '0' || pendingTx}\r\n          text={pendingTx ? 'Pending Confirmation' : 'Confirm'}\r\n          variant={'tertiary'}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        />\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import React, { useCallback, useMemo, useState } from 'react'\r\n\r\nimport BigNumber from 'bignumber.js'\r\n\r\nimport Button from '../../../components/Button'\r\nimport Modal, { ModalProps } from '../../../components/Modal'\r\nimport ModalActions from '../../../components/ModalActions'\r\nimport ModalTitle from '../../../components/ModalTitle'\r\nimport TokenInput from '../../../components/TokenInput'\r\n\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface WithdrawModalProps extends ModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\r\n  onConfirm,\r\n  onDismiss,\r\n  max,\r\n  tokenName = '',\r\n}) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal>\r\n      <ModalTitle text={`Withdraw ${tokenName}`} />\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\r\n        <Button\r\n          disabled={pendingTx}\r\n          text={pendingTx ? 'Pending Confirmation' : 'Confirm'}\r\n          variant={'tertiary'}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        />\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nimport { Contract } from 'web3-eth-contract'\r\n\r\nimport Button from '../../../components/Button'\r\nimport Card from '../../../components/Card'\r\nimport CardContent from '../../../components/CardContent'\r\nimport CardIcon from '../../../components/CardIcon'\r\nimport { AddIcon, RemoveIcon } from '../../../components/icons'\r\nimport IconButton from '../../../components/IconButton'\r\nimport Label from '../../../components/Label'\r\nimport Value from '../../../components/Value'\r\n\r\nimport useAllowance from '../../../hooks/useAllowance'\r\nimport useApprove from '../../../hooks/useApprove'\r\nimport useModal from '../../../hooks/useModal'\r\nimport useStake from '../../../hooks/useStake'\r\nimport useStakedBalance from '../../../hooks/useStakedBalance'\r\nimport useTokenBalance from '../../../hooks/useTokenBalance'\r\nimport useUnstake from '../../../hooks/useUnstake'\r\n\r\nimport { getDisplayBalance } from '../../../utils/formatBalance'\r\n\r\nimport DepositModal from './DepositModal'\r\nimport WithdrawModal from './WithdrawModal'\r\n\r\nimport imageUniswap from '../../../assets/img/logo-cake.svg'\r\n\r\ninterface StakeProps {\r\n  lpContract: Contract\r\n  pid: number\r\n  tokenName: string\r\n}\r\n\r\nconst Stake: React.FC<StakeProps> = ({ lpContract, pid, tokenName }) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n\r\n  const allowance = useAllowance(lpContract)\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const tokenBalance = useTokenBalance(lpContract.options.address)\r\n  const stakedBalance = useStakedBalance(pid)\r\n\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={tokenName}\r\n    />,\r\n  )\r\n\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      onConfirm={onUnstake}\r\n      tokenName={tokenName}\r\n    />,\r\n  )\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }, [onApprove, setRequestedApproval])\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <StyledCardContentInner>\r\n          <StyledCardHeader>\r\n            <CardIcon>\r\n              <img src={imageUniswap} height=\"50\" style={{ marginTop: -4 }} />\r\n            </CardIcon>\r\n            <Value value={getDisplayBalance(stakedBalance)} />\r\n            <Label text={`${tokenName} Tokens Staked`} />\r\n          </StyledCardHeader>\r\n          <StyledCardActions>\r\n            {!allowance.toNumber() ? (\r\n              <Button\r\n                disabled={requestedApproval}\r\n                variant={'tertiary'}\r\n                onClick={handleApprove}\r\n                text={`Approve`}\r\n              />\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  text=\"Deposit\"\r\n                  variant={'tertiary'}\r\n                  onClick={onPresentDeposit}\r\n                />\r\n                <StyledActionSpacer />\r\n                <Button\r\n                  disabled={stakedBalance.eq(new BigNumber(0))}\r\n                  text=\"Withdraw\"\r\n                  border\r\n                  variant={'secondary'}\r\n                  onClick={onPresentWithdraw}\r\n                />\r\n                <StyledActionSpacer />\r\n              </>\r\n            )}\r\n          </StyledCardActions>\r\n        </StyledCardContentInner>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[6]}px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default Stake\r\n","import React, { useMemo, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { useWallet } from 'use-wallet'\r\nimport { provider } from 'web3-core'\r\n\r\nimport Button from '../../components/Button'\r\nimport PageHeader from '../../components/PageHeader'\r\nimport Spacer from '../../components/Spacer'\r\n\r\nimport useYam from '../../hooks/useYam'\r\nimport useFarm from '../../hooks/useFarm'\r\nimport useRedeem from '../../hooks/useRedeem'\r\nimport { getContract } from '../../utils/erc20'\r\nimport { getFarmContract } from '../../farm/utils'\r\n\r\nimport Harvest from './components/Harvest'\r\nimport Stake from './components/Stake'\r\n\r\nconst Farm: React.FC = () => {\r\n  const { farmId } = useParams<{ farmId: string }>()\r\n\r\n  const {\r\n    pid,\r\n    lpToken,\r\n    lpTokenAddress,\r\n    tokenAddress,\r\n    earnToken,\r\n    name,\r\n    icon,\r\n    version,\r\n  } = useFarm(farmId) || {\r\n    pid: 0,\r\n    lpToken: '',\r\n    lpTokenAddress: '',\r\n    tokenAddress: '',\r\n    earnToken: '',\r\n    name: '',\r\n    icon: '',\r\n    version: '',\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const yam = useYam()\r\n  const { ethereum } = useWallet()\r\n\r\n  const lpContract = useMemo(() => {\r\n    return getContract(ethereum as provider, lpTokenAddress)\r\n  }, [ethereum, lpTokenAddress])\r\n\r\n  const { onRedeem } = useRedeem(getFarmContract(yam))\r\n\r\n  const lpTokenName = useMemo(() => {\r\n    return lpToken.toUpperCase()\r\n  }, [lpToken])\r\n\r\n  const earnTokenName = useMemo(() => {\r\n    return earnToken.toUpperCase()\r\n  }, [earnToken])\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        subtitle={`Deposit ${lpTokenName} Tokens and earn rewards`}\r\n        title={`${name}`}\r\n      />\r\n      <StyledFarm>\r\n        <StyledCardsWrapper>\r\n          <StyledCardWrapper>\r\n            <Harvest pid={pid} />\r\n          </StyledCardWrapper>\r\n          <Spacer />\r\n          <StyledCardWrapper>\r\n            <Stake\r\n              lpContract={lpContract}\r\n              pid={pid}\r\n              tokenName={lpToken.toUpperCase()}\r\n            />\r\n          </StyledCardWrapper>\r\n        </StyledCardsWrapper>\r\n        <Spacer size=\"lg\" />\r\n        <Spacer size=\"lg\" />\r\n        <div\r\n          style={{\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <Button\r\n            text=\"Get LP Tokens\"\r\n            backgroundColor=\"rgb(31, 199, 212)\"\r\n            size=\"xs\"\r\n            href={`https://pancakeswap.finance/swap?outputCurrency=${tokenAddress}`}\r\n          />\r\n        </div>\r\n        <Spacer size=\"lg\" />\r\n      </StyledFarm>\r\n    </>\r\n  )\r\n}\r\n\r\nconst StyledFarm = styled.div`\r\n  margin-top: -70px;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledCardsWrapper = styled.div`\r\n  display: flex;\r\n  width: 600px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`\r\n\r\nconst StyledInfo = styled.h3`\r\n  color: '#17054b';\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n`\r\n\r\nexport default Farm\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nimport CardIcon from '../CardIcon'\r\n\r\ninterface LoaderProps {\r\n  text?: string\r\n}\r\n\r\nconst Loader: React.FC<LoaderProps> = ({ text }) => {\r\n  return (\r\n    <StyledLoader>\r\n      <CardIcon>\r\n        <StyledYam>🍣</StyledYam>\r\n      </CardIcon>\r\n      {!!text && <StyledText>{text}</StyledText>}\r\n    </StyledLoader>\r\n  )\r\n}\r\n\r\nconst spin = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst StyledLoader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledYam = styled.div`\r\n  font-size: 32px;\r\n  position: relative;\r\n  animation: 1s ${spin} infinite;\r\n`\r\n\r\nconst StyledText = styled.div`\r\n  color: ${(props) => props.theme.color.grey[400]};\r\n`\r\n\r\nexport default Loader\r\n","import { useContext } from 'react'\r\nimport { Context as FarmsContext } from '../contexts/Farms'\r\n\r\nconst useFarms = () => {\r\n  const { farms } = useContext(FarmsContext)\r\n  return [farms]\r\n}\r\n\r\nexport default useFarms","import BigNumber from 'bignumber.js'\r\n\r\nexport { default as formatAddress } from './formatAddress'\r\n\r\nexport const bnToDec = (bn: BigNumber, decimals = 9): number => {\r\n  return bn.dividedBy(new BigNumber(10).pow(decimals)).toNumber()\r\n}\r\n\r\nexport const decToBn = (dec: number, decimals = 9) => {\r\n  return new BigNumber(dec).multipliedBy(new BigNumber(10).pow(decimals))\r\n}\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { provider } from 'web3-core'\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from 'use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\n\r\nimport {\r\n  getFarmContract,\r\n  getWethContract,\r\n  getFarms,\r\n  getTotalLPWethValue,\r\n} from '../farm/utils'\r\nimport useYam from './useYam'\r\nimport useBlock from './useBlock'\r\n\r\nexport interface StakedValue {\r\n  tokenAmount: BigNumber\r\n  wethAmount: BigNumber\r\n  totalWethValue: BigNumber\r\n  tokenPriceInWeth: BigNumber\r\n  poolWeight: BigNumber\r\n}\r\n\r\nconst useAllStakedValue = () => {\r\n  const [balances, setBalance] = useState([] as Array<StakedValue>)\r\n  const { account }: { account: string; ethereum: provider } = useWallet()\r\n  const yam = useYam()\r\n  const farms = getFarms(yam)\r\n  const farmContract = getFarmContract(yam)\r\n  const wethContact = getWethContract(yam)\r\n  const block = useBlock()\r\n\r\n  const fetchAllStakedValue = useCallback(async () => {\r\n    const balances: Array<StakedValue> = await Promise.all(\r\n      farms.map(\r\n        ({\r\n          pid,\r\n          lpContract,\r\n          tokenContract,\r\n        }: {\r\n          pid: number\r\n          lpContract: Contract\r\n          tokenContract: Contract\r\n        }) =>\r\n          getTotalLPWethValue(\r\n            farmContract,\r\n            wethContact,\r\n            lpContract,\r\n            tokenContract,\r\n            pid,\r\n          ),\r\n      ),\r\n    )\r\n\r\n    setBalance(balances)\r\n  }, [account, farmContract, yam])\r\n\r\n  useEffect(() => {\r\n    if (account && farmContract && yam) {\r\n      fetchAllStakedValue()\r\n    }\r\n  }, [account, block, farmContract, setBalance, yam])\r\n\r\n  return balances\r\n}\r\n\r\nexport default useAllStakedValue\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { CountdownRenderProps } from 'react-countdown'\r\nimport { useWallet } from 'use-wallet'\r\n\r\nimport Button from '../../../components/Button'\r\nimport Card from '../../../components/Card'\r\nimport CardContent from '../../../components/CardContent'\r\nimport CardIcon from '../../../components/CardIcon'\r\nimport Loader from '../../../components/Loader'\r\nimport Spacer from '../../../components/Spacer'\r\n\r\nimport useFarms from '../../../hooks/useFarms'\r\nimport useYam from '../../../hooks/useYam'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nimport { Farm } from '../../../contexts/Farms'\r\n\r\nimport { bnToDec } from '../../../utils'\r\nimport { getEarned, getFarmContract } from '../../../farm/utils'\r\nimport useAllStakedValue, {\r\n  StakedValue,\r\n} from '../../../hooks/useAllStakedValue'\r\n\r\nimport { BASIC_TOKEN } from '../../../constants/config'\r\n\r\nimport imageLTO from '../../../assets/img/logo-icon.png'\r\n\r\ninterface FarmWithStakedValue extends Farm, StakedValue {\r\n  apy: BigNumber\r\n}\r\n\r\nconst FarmCards: React.FC = () => {\r\n  const [farms] = useFarms()\r\n  const { account } = useWallet()\r\n  const stakedValue = useAllStakedValue()\r\n\r\n  const farmIndex = farms.findIndex(\r\n    ({ tokenSymbol }) => tokenSymbol === BASIC_TOKEN,\r\n  )\r\n\r\n  const farmPrice =\r\n    farmIndex >= 0 && stakedValue[farmIndex]\r\n      ? stakedValue[farmIndex].tokenPriceInWeth\r\n      : new BigNumber(0)\r\n\r\n  const BLOCKS_PER_YEAR = new BigNumber(2336000)\r\n  // TODO: After block height xxxx, FARM_PER_BLOCK = 100;\r\n  const FARM_PER_BLOCK = new BigNumber(1000)\r\n\r\n  const rows = farms.reduce<FarmWithStakedValue[][]>(\r\n    (farmRows, farm, i) => {\r\n      const farmWithStakedValue = {\r\n        ...farm,\r\n        ...stakedValue[i],\r\n        apy: stakedValue[i]\r\n          ? farmPrice\r\n              .times(FARM_PER_BLOCK)\r\n              .times(BLOCKS_PER_YEAR)\r\n              .times(stakedValue[i].poolWeight)\r\n              .div(stakedValue[i].totalWethValue)\r\n          : null,\r\n      }\r\n      const newFarmRows = [...farmRows]\r\n      if (newFarmRows[newFarmRows.length - 1].length === 3) {\r\n        newFarmRows.push([farmWithStakedValue])\r\n      } else {\r\n        newFarmRows[newFarmRows.length - 1].push(farmWithStakedValue)\r\n      }\r\n      return newFarmRows\r\n    },\r\n    [[]],\r\n  )\r\n\r\n  return (\r\n    <StyledCards>\r\n      {!!rows[0].length ? (\r\n        rows.map((farmRow, i) => (\r\n          <StyledRow key={i}>\r\n            {farmRow.map((farm, j) => (\r\n              <React.Fragment key={j}>\r\n                <FarmCard farm={farm} />\r\n                {(j === 0 || j === 1) && <StyledSpacer />}\r\n              </React.Fragment>\r\n            ))}\r\n          </StyledRow>\r\n        ))\r\n      ) : (\r\n        <StyledLoadingWrapper>\r\n          <Loader text=\"Cooking the rice ...\" />\r\n        </StyledLoadingWrapper>\r\n      )}\r\n    </StyledCards>\r\n  )\r\n}\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm }) => {\r\n  const [startTime, setStartTime] = useState(0)\r\n  const [harvestable, setHarvestable] = useState(0)\r\n\r\n  const { account } = useWallet()\r\n  const { lpTokenAddress } = farm\r\n  const yam = useYam()\r\n\r\n  const renderer = (countdownProps: CountdownRenderProps) => {\r\n    const { hours, minutes, seconds } = countdownProps\r\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds\r\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes\r\n    const paddedHours = hours < 10 ? `0${hours}` : hours\r\n    return (\r\n      <span style={{ width: '100%' }}>\r\n        {paddedHours}:{paddedMinutes}:{paddedSeconds}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchEarned() {\r\n      if (yam) return\r\n      const earned = await getEarned(\r\n        getFarmContract(yam),\r\n        lpTokenAddress,\r\n        account,\r\n      )\r\n      setHarvestable(bnToDec(earned, 18)) // Should get decimals from contract or config\r\n    }\r\n    if (yam && account) {\r\n      fetchEarned()\r\n    }\r\n  }, [yam, lpTokenAddress, account, setHarvestable])\r\n\r\n  // const poolActive = true // startTime * 1000 - Date.now() <= 0\r\n\r\n  // let farmApy: any\r\n  // if (farm.apy && farm.apy.isNaN()) {\r\n  //   farmApy = '- %'\r\n  // } else {\r\n  //   farmApy = farm.apy\r\n  //     ? `${\r\n  //         farm.apy\r\n  //           .times(new BigNumber(100))\r\n  //           .toNumber()\r\n  //           .toLocaleString('en-US')\r\n  //           .slice(0, -1) || '-'\r\n  //       }%`\r\n  //     : 'Loading ...'\r\n  // }\r\n\r\n  let poolWeight: any\r\n  if (farm.poolWeight && farm.poolWeight.isNaN()) {\r\n    poolWeight = '- %'\r\n  } else {\r\n    poolWeight = farm.poolWeight\r\n      ? `${farm.poolWeight.times(new BigNumber(100)).toNumber()}% pool rewards`\r\n      : 'Loading ...'\r\n  }\r\n\r\n  return (\r\n    <StyledCardWrapper>\r\n      {farm.tokenSymbol === 'SASHIMI' && <StyledCardAccent />}\r\n      <Card>\r\n        <CardContent>\r\n          <StyledContent>\r\n            <CardIcon>\r\n              <img\r\n                src={imageLTO}\r\n                height=\"50\"\r\n                style={\r\n                  farm.version === 'V1'\r\n                    ? { filter: 'grayscale(1)', marginTop: -4 }\r\n                    : { marginTop: -4 }\r\n                }\r\n              />\r\n            </CardIcon>\r\n            <StyledTitle>\r\n              {farm.name}\r\n            </StyledTitle>\r\n            <StyledDetails>\r\n              <StyledDetail>{'1024% APY'}</StyledDetail>\r\n            </StyledDetails>\r\n            <Spacer />\r\n            <Button\r\n              text=\"Select\"\r\n              variant={'tertiary'}\r\n              to={`/farms/${farm.id}`}\r\n            ></Button>\r\n            {/* <StyledInsight>\r\n              <span>APY</span>\r\n              <span>\r\n                {farmApy}\r\n              </span>\r\n              <span>\r\n                {farm.tokenAmount\r\n                  ? (farm.tokenAmount.toNumber() || 0).toLocaleString('en-US')\r\n                  : '-'}{' '}\r\n                {farm.tokenSymbol}\r\n              </span>\r\n              <span>\r\n                {farm.wethAmount\r\n                  ? (farm.wethAmount.toNumber() || 0).toLocaleString('en-US')\r\n                  : '-'}{' '}\r\n                ETH\r\n              </span>\r\n            </StyledInsight> */}\r\n          </StyledContent>\r\n        </CardContent>\r\n      </Card>\r\n    </StyledCardWrapper>\r\n  )\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 12px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst StyledCards = styled.div`\r\n  width: 900px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledLoadingWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledRow = styled.div`\r\n  display: flex;\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n  flex-flow: row wrap;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  width: calc((900px - ${(props) => props.theme.spacing[4]}px * 2) / 3);\r\n  position: relative;\r\n`\r\n\r\nconst StyledTitle = styled.h4`\r\n  color: ${(props) => props.theme.color.grey[600]};\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  margin: ${(props) => props.theme.spacing[2]}px 0 0;\r\n  padding: 0;\r\n`\r\n\r\nconst StyledVersion = styled.span`\r\n  color: #1f4760;\r\n  font-size: 24px;\r\n  font-weight: 900;\r\n  margin: ${(props) => props.theme.spacing[2]}px 0 0;\r\n  padding: 0;\r\n`\r\n\r\nconst StyledContent = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledDetails = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledDetail = styled.div`\r\n  color: ${(props) => props.theme.color.grey[500]};\r\n`\r\n\r\nconst StyledInsight = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  box-sizing: border-box;\r\n  border-radius: 8px;\r\n  background: #fffdfa;\r\n  color: #aa9584;\r\n  width: 100%;\r\n  margin-top: 12px;\r\n  line-height: 32px;\r\n  font-size: 13px;\r\n  border: 1px solid #e6dcd5;\r\n  text-align: center;\r\n  padding: 0 12px;\r\n`\r\n\r\nexport default FarmCards\r\n","export const BASIC_TOKEN = 'BEANCHART';\r\nexport const GITHUB = 'https://github.com/momsk/beanchart-farming';\r\n","import React from 'react'\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\r\nimport { useWallet } from 'use-wallet'\r\nimport styled from 'styled-components'\r\n\r\nimport Button from '../../components/Button'\r\nimport Page from '../../components/Page'\r\nimport PageHeader from '../../components/PageHeader'\r\nimport WalletProviderModal from '../../components/WalletProviderModal'\r\n\r\nimport useModal from '../../hooks/useModal'\r\n\r\nimport Farm from '../Farm'\r\n\r\nimport FarmCards from './components/FarmCards'\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const { account } = useWallet()\r\n  const [onPresentWalletProviderModal] = useModal(<WalletProviderModal />)\r\n\r\n  return (\r\n    <Switch>\r\n      <Page>\r\n        {!!account ? (\r\n          <>\r\n            <Route exact path={path}>\r\n              <PageHeader\r\n                title=\"Earn Rewards\"\r\n                subtitle=\"Earn rewards by staking Cake LP Tokens.\"\r\n              />\r\n              <StyledFarms>\r\n                <StyledCardsWrapper>\r\n                  <StyledCardWrapper>\r\n                    <FarmCards />\r\n                  </StyledCardWrapper>\r\n                </StyledCardsWrapper>\r\n              </StyledFarms>\r\n            </Route>\r\n            <Route path={`${path}/:farmId`}>\r\n              <Farm />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              flex: 1,\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n\r\n          </div>\r\n        )}\r\n      </Page>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nconst StyledFarms = styled.div`\r\n  margin-top: -70px;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledCardsWrapper = styled.div`\r\n  display: flex;\r\n  width: 600px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`\r\n\r\nexport default Farms\r\n","import { black, green, grey, red, purple, white, whiteOpacity } from './colors'\r\n\r\nconst theme = {\r\n  borderRadius: 12,\r\n  breakpoints: {\r\n    mobile: 400,\r\n  },\r\n  color: {\r\n    black,\r\n    grey,\r\n    primary: {\r\n      light: red[200],\r\n      main: red[500],\r\n    },\r\n    secondary: {\r\n      main: green[500],\r\n    },\r\n    white,\r\n    whiteOpacity,\r\n    purple\r\n  },\r\n  siteWidth: 1200,\r\n  spacing: {\r\n    1: 4,\r\n    2: 8,\r\n    3: 16,\r\n    4: 24,\r\n    5: 32,\r\n    6: 48,\r\n    7: 64,\r\n  },\r\n  topBarSize: 128\r\n}\r\n\r\nexport default theme\r\n","export const white = '#FFF'\r\nexport const black = '#000'\r\nexport const whiteOpacity = 'rgba(255, 255, 255, 0.2)'\r\n\r\nexport const green = {\r\n  500: '##00d1810',\r\n}\r\n\r\nexport const red = {\r\n  100: '#FFFDFE',\r\n  200: '#abacad',\r\n  500: '#969698',\r\n}\r\n\r\nexport const grey = {\r\n  100: '#f9f9f9',\r\n  200: '#d2d2d3',\r\n  300: '#c5c5c6',\r\n  400: '#abacad',\r\n  500: '#9e9fa0',\r\n  600: '#919394',\r\n  800: '#2d1e12',\r\n}\r\n\r\nexport const purple = {\r\n  100: '#61479d',\r\n  300: '#4a3978',\r\n  600: '#c04cf4'\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { UseWalletProvider } from 'use-wallet'\r\n\r\nimport DisclaimerModal from './components/DisclaimerModal'\r\nimport MobileMenu from './components/MobileMenu'\r\nimport TopBar from './components/TopBar'\r\n\r\nimport FarmsProvider from './contexts/Farms'\r\nimport ModalsProvider from './contexts/Modals'\r\nimport YamProvider from './contexts/YamProvider'\r\nimport TransactionProvider from './contexts/Transactions'\r\n\r\nimport useModal from './hooks/useModal'\r\n\r\nimport Farms from './views/Farms'\r\n\r\nimport { getEthChainInfo } from './utils/getEthChainInfo'\r\n\r\nimport theme from './theme'\r\n\r\nconst App: React.FC = () => {\r\n  const [mobileMenu, setMobileMenu] = useState(false)\r\n\r\n  const handleDismissMobileMenu = useCallback(() => {\r\n    setMobileMenu(false)\r\n  }, [setMobileMenu])\r\n\r\n  const handlePresentMobileMenu = useCallback(() => {\r\n    setMobileMenu(true)\r\n  }, [setMobileMenu])\r\n\r\n  return (\r\n    <Providers>\r\n      <HashRouter>\r\n        <TopBar\r\n          onPresentMobileMenu={handlePresentMobileMenu}\r\n          showButton={true}\r\n        />\r\n        <MobileMenu onDismiss={handleDismissMobileMenu} visible={mobileMenu} />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/farms\" />\r\n          </Route>\r\n          <Route path=\"/farms\">\r\n            <Farms />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n      <Disclaimer />\r\n    </Providers>\r\n  )\r\n}\r\n\r\n// https://infura.io/docs/gettingStarted/chooseaNetwork\r\n// https://www.anyblockanalytics.com/news/overview-ethereum-blockchain-networks/\r\nconst Providers: React.FC = ({ children }) => {\r\n  const { chainId, rpcUrl } = getEthChainInfo()\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <UseWalletProvider\r\n        chainId={chainId}\r\n        connectors={{\r\n          walletconnect: { rpcUrl },\r\n        }}\r\n      >\r\n        <YamProvider>\r\n          <TransactionProvider>\r\n            <FarmsProvider>\r\n              <ModalsProvider>{children}</ModalsProvider>\r\n            </FarmsProvider>\r\n          </TransactionProvider>\r\n        </YamProvider>\r\n      </UseWalletProvider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nconst Disclaimer: React.FC = () => {\r\n  const markSeen = useCallback(() => {\r\n    localStorage.setItem('disclaimer', 'seen')\r\n  }, [])\r\n\r\n  const [onPresentDisclaimerModal] = useModal(\r\n    <DisclaimerModal onConfirm={markSeen} />,\r\n  )\r\n\r\n  useEffect(() => {\r\n    const seenDisclaimer = true // localStorage.getItem('disclaimer')\r\n    if (!seenDisclaimer) {\r\n      onPresentDisclaimerModal()\r\n    }\r\n  }, [])\r\n\r\n  return <div />\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}